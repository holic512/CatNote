<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CoolRequestHistoryPersistent">
    <option name="historyAPIS" value="[{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:25,&quot;second&quot;:40,&quot;nano&quot;:910927600}},&quot;historyId&quot;:&quot;4aea0271-7a62-45f2-9ecf-cb9bc8eeb6cb&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:25,&quot;second&quot;:40,&quot;nano&quot;:734180200}},&quot;historyId&quot;:&quot;0af309c8-30cb-479d-a9a0-95e8beb48c65&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:25,&quot;second&quot;:40,&quot;nano&quot;:567464200}},&quot;historyId&quot;:&quot;338a412d-53bb-4606-b505-76d9d93ab18a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:25,&quot;second&quot;:40,&quot;nano&quot;:372764900}},&quot;historyId&quot;:&quot;72bef491-aa88-4662-811c-f72b7e004ec8&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:25,&quot;second&quot;:40,&quot;nano&quot;:194030200}},&quot;historyId&quot;:&quot;73baad06-1120-41a5-afff-a7ada8e965e6&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:25,&quot;second&quot;:39,&quot;nano&quot;:998179900}},&quot;historyId&quot;:&quot;3c9f9bb9-a126-44b3-967a-60d903144531&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:25,&quot;second&quot;:39,&quot;nano&quot;:829723200}},&quot;historyId&quot;:&quot;ac44590d-063d-4eee-8f72-894ce2d227ec&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:25,&quot;second&quot;:39,&quot;nano&quot;:609693300}},&quot;historyId&quot;:&quot;a7a7820a-167a-4911-bb61-dbf38883d4c7&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:25,&quot;second&quot;:39,&quot;nano&quot;:327803000}},&quot;historyId&quot;:&quot;1dcb72a8-eb7c-4d65-a859-808f5b2e842d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:25,&quot;second&quot;:39,&quot;nano&quot;:105341000}},&quot;historyId&quot;:&quot;e47b1ba0-d839-4c43-aebf-b3b86f1f9589&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:25,&quot;second&quot;:38,&quot;nano&quot;:906263300}},&quot;historyId&quot;:&quot;6ad4f6ed-c645-4398-b5eb-0df035cd5b3c&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:25,&quot;second&quot;:38,&quot;nano&quot;:697941700}},&quot;historyId&quot;:&quot;cd699273-7c84-4f88-b72d-111d72162ec7&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:25,&quot;second&quot;:38,&quot;nano&quot;:494398800}},&quot;historyId&quot;:&quot;c5c8d492-569a-4dd7-824e-74372f79f53f&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:25,&quot;second&quot;:38,&quot;nano&quot;:220066000}},&quot;historyId&quot;:&quot;c26a47f1-2254-416f-843a-582952fc7906&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:25,&quot;second&quot;:37,&quot;nano&quot;:782042900}},&quot;historyId&quot;:&quot;c9ed2abf-e783-4203-8678-1ff93aa749e5&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:25,&quot;second&quot;:37,&quot;nano&quot;:364382400}},&quot;historyId&quot;:&quot;5f2a8463-3094-4b7e-87a1-9f231f743430&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:25,&quot;second&quot;:36,&quot;nano&quot;:938978900}},&quot;historyId&quot;:&quot;13d164a7-5e7d-4584-8547-3eb583c32bd7&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:25,&quot;second&quot;:36,&quot;nano&quot;:280853200}},&quot;historyId&quot;:&quot;89ccb902-1c5f-44d7-bcad-c4df243307d5&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:25,&quot;second&quot;:25,&quot;nano&quot;:233111200}},&quot;historyId&quot;:&quot;829932e6-f128-45e9-883c-4128922f3a9d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:25,&quot;second&quot;:22,&quot;nano&quot;:296941700}},&quot;historyId&quot;:&quot;1740bb12-7139-482b-bb5c-1bdb24ab925d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:24,&quot;second&quot;:37,&quot;nano&quot;:957202700}},&quot;historyId&quot;:&quot;7fffd495-8fea-4bec-9994-b9049e49d0e0&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:24,&quot;second&quot;:37,&quot;nano&quot;:309605200}},&quot;historyId&quot;:&quot;63ca0f54-6f42-4715-8712-2f714cb76df5&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:24,&quot;second&quot;:36,&quot;nano&quot;:657324800}},&quot;historyId&quot;:&quot;d688193e-4a7d-41fe-a6e5-34fd3891528d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:24,&quot;second&quot;:29,&quot;nano&quot;:361607800}},&quot;historyId&quot;:&quot;a9c1632b-cc90-428b-a591-212b3f57e480&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:24,&quot;second&quot;:27,&quot;nano&quot;:532037800}},&quot;historyId&quot;:&quot;af119e5b-288f-4331-83aa-e901fab4d013&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:19,&quot;second&quot;:40,&quot;nano&quot;:372271500}},&quot;historyId&quot;:&quot;1d527074-fb00-4acd-90d0-951a8b97e630&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:19,&quot;second&quot;:39,&quot;nano&quot;:750035900}},&quot;historyId&quot;:&quot;d3b0b39e-7064-4f01-aa50-c10a85fe2dd0&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:19,&quot;second&quot;:39,&quot;nano&quot;:33591100}},&quot;historyId&quot;:&quot;7d6b93d6-8140-408a-ad0d-4ce0084ec8b5&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:19,&quot;second&quot;:38,&quot;nano&quot;:426751200}},&quot;historyId&quot;:&quot;e2f5c4b4-ac58-48af-bb09-9d47f278029f&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:19,&quot;second&quot;:37,&quot;nano&quot;:919096000}},&quot;historyId&quot;:&quot;eba5a0f9-ad97-4147-bcfc-abdb20ec9890&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:19,&quot;second&quot;:37,&quot;nano&quot;:426600400}},&quot;historyId&quot;:&quot;9fb8d595-7913-4731-9721-cb166bfcfefc&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:19,&quot;second&quot;:36,&quot;nano&quot;:981133300}},&quot;historyId&quot;:&quot;a9226709-75b6-42de-9935-6787bee86f6d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:19,&quot;second&quot;:36,&quot;nano&quot;:515438400}},&quot;historyId&quot;:&quot;2b51251f-1c07-4fe5-aebc-b17120d64c9f&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:19,&quot;second&quot;:36,&quot;nano&quot;:3957000}},&quot;historyId&quot;:&quot;1bf396a2-e3b5-43e4-a13a-3355f0ab094b&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:19,&quot;second&quot;:35,&quot;nano&quot;:415250100}},&quot;historyId&quot;:&quot;76e992af-c4ce-4773-96ea-5be99a3bf7c2&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:19,&quot;second&quot;:34,&quot;nano&quot;:846959800}},&quot;historyId&quot;:&quot;e3b156f0-40c5-4f46-8404-73045693415d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:19,&quot;second&quot;:34,&quot;nano&quot;:88348100}},&quot;historyId&quot;:&quot;7ac488a7-70a0-42cc-81c9-a8b7fd99062b&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:19,&quot;second&quot;:29,&quot;nano&quot;:482792300}},&quot;historyId&quot;:&quot;81439cd9-3f09-4322-abfd-02403ffeea3c&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:9,&quot;minute&quot;:22,&quot;second&quot;:14,&quot;nano&quot;:879968300}},&quot;historyId&quot;:&quot;ac49e1d7-2858-42a9-a22d-b24340e8ca15&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:9,&quot;minute&quot;:19,&quot;second&quot;:54,&quot;nano&quot;:260380900}},&quot;historyId&quot;:&quot;36a6b906-07f9-4fe8-ac9f-5279ab43413d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:9,&quot;minute&quot;:19,&quot;second&quot;:3,&quot;nano&quot;:66319600}},&quot;historyId&quot;:&quot;32f87338-b20a-4807-bf2e-9f44b2fd33dd&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:9,&quot;minute&quot;:18,&quot;second&quot;:5,&quot;nano&quot;:732814000}},&quot;historyId&quot;:&quot;4618a7e9-b1c2-4d1a-af63-c1d99ce336a7&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:9,&quot;minute&quot;:14,&quot;second&quot;:39,&quot;nano&quot;:77641700}},&quot;historyId&quot;:&quot;77fd5c96-9d1c-4194-a327-f12fef198cea&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:9,&quot;minute&quot;:14,&quot;second&quot;:7,&quot;nano&quot;:313581800}},&quot;historyId&quot;:&quot;72debadf-15d2-4b3a-98f2-6435a2c64d93&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:9,&quot;minute&quot;:13,&quot;second&quot;:39,&quot;nano&quot;:846425600}},&quot;historyId&quot;:&quot;c2c798f8-b304-48aa-a2cb-7ee92b5f07fb&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:9,&quot;minute&quot;:11,&quot;second&quot;:51,&quot;nano&quot;:480461300}},&quot;historyId&quot;:&quot;f910c776-9bb6-4e7d-b549-8813f107a6d0&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:9,&quot;minute&quot;:11,&quot;second&quot;:49,&quot;nano&quot;:699208900}},&quot;historyId&quot;:&quot;a98a6dd1-f4fb-47ec-8bdf-5b951d32d62b&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:9,&quot;minute&quot;:8,&quot;second&quot;:1,&quot;nano&quot;:566844200}},&quot;historyId&quot;:&quot;242be39a-09be-465d-9bd5-4d2388b4aae3&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:9,&quot;minute&quot;:8,&quot;second&quot;:1,&quot;nano&quot;:65521200}},&quot;historyId&quot;:&quot;2ed808e9-30f7-48b0-8a4f-36407d91c81a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:9,&quot;minute&quot;:8,&quot;second&quot;:0,&quot;nano&quot;:369867700}},&quot;historyId&quot;:&quot;7491e67e-90e7-466b-ab2c-05d7935edea3&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:9,&quot;minute&quot;:7,&quot;second&quot;:57,&quot;nano&quot;:167662600}},&quot;historyId&quot;:&quot;b684fdd5-d404-4fab-b068-e7a996d262bf&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:9,&quot;minute&quot;:6,&quot;second&quot;:1,&quot;nano&quot;:253695500}},&quot;historyId&quot;:&quot;917eae01-5034-4975-bcfb-2ac3eef895a5&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/batchDeleteUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;batchDeleteUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;060a359ee003ee05b89fd712c5e787d9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/batchDeleteUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:9,&quot;minute&quot;:4,&quot;second&quot;:59,&quot;nano&quot;:258013000}},&quot;historyId&quot;:&quot;0ebde215-d641-403f-97af-a85f1b8553a9&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/batchDeleteUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;batchDeleteUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;060a359ee003ee05b89fd712c5e787d9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/batchDeleteUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:9,&quot;minute&quot;:4,&quot;second&quot;:46,&quot;nano&quot;:966019100}},&quot;historyId&quot;:&quot;e9d40b10-b1a9-4bff-b50a-be54906e6d42&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/batchDeleteUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;batchDeleteUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;060a359ee003ee05b89fd712c5e787d9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/batchDeleteUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;AdminToken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:9,&quot;minute&quot;:3,&quot;second&quot;:53,&quot;nano&quot;:829050500}},&quot;historyId&quot;:&quot;9cfe4263-ada9-475d-9473-147e1afae3b1&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/batchDeleteUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;batchDeleteUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;060a359ee003ee05b89fd712c5e787d9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/batchDeleteUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;AdminToken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:9,&quot;minute&quot;:3,&quot;second&quot;:52,&quot;nano&quot;:589130400}},&quot;historyId&quot;:&quot;1bd593c8-5123-46f7-a160-cf7e7aecb050&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/batchDeleteUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;batchDeleteUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;060a359ee003ee05b89fd712c5e787d9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/batchDeleteUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;AdminToken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:9,&quot;minute&quot;:3,&quot;second&quot;:51,&quot;nano&quot;:791330800}},&quot;historyId&quot;:&quot;effc7b18-fae4-4388-824d-1b2b472227dc&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/batchDeleteUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;batchDeleteUser&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;060a359ee003ee05b89fd712c5e787d9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/batchDeleteUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;AdminToken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:9,&quot;minute&quot;:3,&quot;second&quot;:49,&quot;nano&quot;:788708700}},&quot;historyId&quot;:&quot;ecaa967d-497f-4c5a-8167-7e7ad750de5f&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:9,&quot;minute&quot;:1,&quot;second&quot;:53,&quot;nano&quot;:241300}},&quot;historyId&quot;:&quot;8304e04f-7383-4e75-8a23-b22c24b4dcef&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:9,&quot;minute&quot;:1,&quot;second&quot;:52,&quot;nano&quot;:414473600}},&quot;historyId&quot;:&quot;39d739e4-458b-49b0-8f7f-48beb9e1a964&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/fetchPageData&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;description&quot;:&quot;获取指定 页数的 用户数据&quot;,&quot;methodName&quot;:&quot;fetchPageData&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9128728514bc2b9f0d96148ee318014f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/fetchPageData&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;page\&quot;: 1,\n  \&quot;rows\&quot;: 10\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:9},&quot;time&quot;:{&quot;hour&quot;:9,&quot;minute&quot;:1,&quot;second&quot;:45,&quot;nano&quot;:341879300}},&quot;historyId&quot;:&quot;20750fa2-6e05-4b02-952b-e85bd8e5d92d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/getUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;getUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取用户总数&quot;,&quot;description&quot;:&quot;获取用户总数&quot;,&quot;methodName&quot;:&quot;getUserCount&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;31ad9d1de0fafcfd44a91ead8d2e9941&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/getUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:33,&quot;nano&quot;:317393600}},&quot;historyId&quot;:&quot;e394df70-223f-4735-b3d7-bd445be815a8&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/getUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;getUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取用户总数&quot;,&quot;description&quot;:&quot;获取用户总数&quot;,&quot;methodName&quot;:&quot;getUserCount&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;31ad9d1de0fafcfd44a91ead8d2e9941&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/getUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:33,&quot;nano&quot;:142970000}},&quot;historyId&quot;:&quot;c020b499-46eb-47f8-b27f-fa76d6f2a557&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/getUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;getUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取用户总数&quot;,&quot;description&quot;:&quot;获取用户总数&quot;,&quot;methodName&quot;:&quot;getUserCount&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;31ad9d1de0fafcfd44a91ead8d2e9941&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/getUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:32,&quot;nano&quot;:973837700}},&quot;historyId&quot;:&quot;861fa84a-69ba-463e-935a-473823fd8f51&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/getUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;getUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取用户总数&quot;,&quot;description&quot;:&quot;获取用户总数&quot;,&quot;methodName&quot;:&quot;getUserCount&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;31ad9d1de0fafcfd44a91ead8d2e9941&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/getUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:32,&quot;nano&quot;:767153000}},&quot;historyId&quot;:&quot;76b20225-4294-4795-9229-5ebe9b7c8cc6&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/getUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;getUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取用户总数&quot;,&quot;description&quot;:&quot;获取用户总数&quot;,&quot;methodName&quot;:&quot;getUserCount&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;31ad9d1de0fafcfd44a91ead8d2e9941&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/getUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:32,&quot;nano&quot;:562466000}},&quot;historyId&quot;:&quot;c764c08a-d4c0-4b71-bfc7-1c08a55bd555&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/getUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;getUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取用户总数&quot;,&quot;description&quot;:&quot;获取用户总数&quot;,&quot;methodName&quot;:&quot;getUserCount&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;31ad9d1de0fafcfd44a91ead8d2e9941&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/getUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:32,&quot;nano&quot;:371656900}},&quot;historyId&quot;:&quot;a5650138-cd9e-46e4-b9d2-e74bd4d338c1&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/getUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;getUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取用户总数&quot;,&quot;description&quot;:&quot;获取用户总数&quot;,&quot;methodName&quot;:&quot;getUserCount&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;31ad9d1de0fafcfd44a91ead8d2e9941&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/getUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:32,&quot;nano&quot;:183527100}},&quot;historyId&quot;:&quot;ddd352a1-885a-4413-a07b-a75053156cfd&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/getUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;getUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取用户总数&quot;,&quot;description&quot;:&quot;获取用户总数&quot;,&quot;methodName&quot;:&quot;getUserCount&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;31ad9d1de0fafcfd44a91ead8d2e9941&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/getUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:31,&quot;nano&quot;:993130100}},&quot;historyId&quot;:&quot;9db24d7e-a78e-4955-b433-8c592c072c31&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/getUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;getUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取用户总数&quot;,&quot;description&quot;:&quot;获取用户总数&quot;,&quot;methodName&quot;:&quot;getUserCount&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;31ad9d1de0fafcfd44a91ead8d2e9941&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/getUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:31,&quot;nano&quot;:809969200}},&quot;historyId&quot;:&quot;e28afb49-8944-44a3-969e-9d072670ce08&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/getUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;getUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取用户总数&quot;,&quot;description&quot;:&quot;获取用户总数&quot;,&quot;methodName&quot;:&quot;getUserCount&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;31ad9d1de0fafcfd44a91ead8d2e9941&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/getUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:31,&quot;nano&quot;:562478900}},&quot;historyId&quot;:&quot;ac87ff2d-a993-4771-ae23-2878bc508a62&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/getUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;getUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取用户总数&quot;,&quot;description&quot;:&quot;获取用户总数&quot;,&quot;methodName&quot;:&quot;getUserCount&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;31ad9d1de0fafcfd44a91ead8d2e9941&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/getUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:30,&quot;nano&quot;:115591500}},&quot;historyId&quot;:&quot;6ea29e6f-5159-43c4-afa3-c99ff4e0e517&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/getUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;getUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取用户总数&quot;,&quot;description&quot;:&quot;获取用户总数&quot;,&quot;methodName&quot;:&quot;getUserCount&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;31ad9d1de0fafcfd44a91ead8d2e9941&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/getUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:21,&quot;nano&quot;:622907400}},&quot;historyId&quot;:&quot;911ed22b-c92f-4bbc-a500-84cbbd65582d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/OUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchOUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c651ca001695a3e2b25c08981b92fa50&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/OUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:2,&quot;nano&quot;:893877900}},&quot;historyId&quot;:&quot;9ce70208-20f6-4ecd-8303-6e314a4a061d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/OUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchOUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c651ca001695a3e2b25c08981b92fa50&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/OUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:2,&quot;nano&quot;:619652600}},&quot;historyId&quot;:&quot;75247292-4227-4b92-bfe5-3578ea34be1b&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/OUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchOUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c651ca001695a3e2b25c08981b92fa50&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/OUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:2,&quot;nano&quot;:421960400}},&quot;historyId&quot;:&quot;7d2ba2ef-cd6a-42b5-a793-24e1e63d4fb6&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/OUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchOUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c651ca001695a3e2b25c08981b92fa50&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/OUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:2,&quot;nano&quot;:245545000}},&quot;historyId&quot;:&quot;b711dff2-f948-4cf4-800d-c37bfcb39144&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/OUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchOUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c651ca001695a3e2b25c08981b92fa50&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/OUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:2,&quot;nano&quot;:62080200}},&quot;historyId&quot;:&quot;d6aa1eb1-9bde-43dd-9d25-87245d467ddb&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/OUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchOUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c651ca001695a3e2b25c08981b92fa50&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/OUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:1,&quot;nano&quot;:888451500}},&quot;historyId&quot;:&quot;d46f6547-eb5d-4a9a-bbf3-c09d5c3c1ebc&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/OUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchOUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c651ca001695a3e2b25c08981b92fa50&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/OUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:1,&quot;nano&quot;:410151400}},&quot;historyId&quot;:&quot;29ad59b1-3490-4f49-87a3-9022d2b37bd1&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/OUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchOUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c651ca001695a3e2b25c08981b92fa50&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/OUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:1,&quot;nano&quot;:241024400}},&quot;historyId&quot;:&quot;217a28bf-aada-4100-aa30-f479b10b6f42&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/OUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchOUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c651ca001695a3e2b25c08981b92fa50&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/OUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:1,&quot;nano&quot;:93329500}},&quot;historyId&quot;:&quot;ade3950a-a86a-4fbf-a5c3-5c9edfe060b8&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/OUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchOUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c651ca001695a3e2b25c08981b92fa50&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/OUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:0,&quot;nano&quot;:922045900}},&quot;historyId&quot;:&quot;94f91b66-ea21-4aac-a138-e617ff845647&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/OUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchOUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c651ca001695a3e2b25c08981b92fa50&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/OUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:0,&quot;nano&quot;:765565800}},&quot;historyId&quot;:&quot;d0176b3e-c351-4864-91f2-3363b1bde109&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/OUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchOUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c651ca001695a3e2b25c08981b92fa50&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/OUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:0,&quot;nano&quot;:589924500}},&quot;historyId&quot;:&quot;62e76bfa-883a-4c0a-b1d6-599a64a03f21&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/OUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchOUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c651ca001695a3e2b25c08981b92fa50&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/OUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:0,&quot;nano&quot;:409647400}},&quot;historyId&quot;:&quot;c15ec95d-0b45-4205-86f8-d13fe438677d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/OUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchOUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c651ca001695a3e2b25c08981b92fa50&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/OUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:0,&quot;nano&quot;:252570400}},&quot;historyId&quot;:&quot;6b6bdecc-dea4-4909-9c43-a454f2fa7e58&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/OUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchOUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c651ca001695a3e2b25c08981b92fa50&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/OUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:0,&quot;nano&quot;:83818000}},&quot;historyId&quot;:&quot;520bd459-9943-4b0c-b6ae-27b4e1341111&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/OUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchOUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c651ca001695a3e2b25c08981b92fa50&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/OUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:44,&quot;second&quot;:59,&quot;nano&quot;:918882700}},&quot;historyId&quot;:&quot;d64b69ba-770b-48d2-8633-0f823e00ed3a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/OUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchOUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c651ca001695a3e2b25c08981b92fa50&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/OUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:44,&quot;second&quot;:59,&quot;nano&quot;:751762800}},&quot;historyId&quot;:&quot;fe89df19-5b00-469c-add1-fdecc9e95bba&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/OUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchOUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c651ca001695a3e2b25c08981b92fa50&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/OUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:44,&quot;second&quot;:59,&quot;nano&quot;:582415100}},&quot;historyId&quot;:&quot;fe135f0f-a774-4961-a0c9-2677c241c4de&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/OUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchOUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c651ca001695a3e2b25c08981b92fa50&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/OUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:44,&quot;second&quot;:59,&quot;nano&quot;:412045300}},&quot;historyId&quot;:&quot;d4dc06f1-3ca7-4e8a-b59e-72c7a49c110e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/OUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchOUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c651ca001695a3e2b25c08981b92fa50&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/OUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:44,&quot;second&quot;:59,&quot;nano&quot;:223556700}},&quot;historyId&quot;:&quot;14daa706-1c6f-4220-9fae-fc5be5011a69&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/OUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchOUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c651ca001695a3e2b25c08981b92fa50&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/OUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:44,&quot;second&quot;:58,&quot;nano&quot;:976943400}},&quot;historyId&quot;:&quot;790f6334-6437-4c65-8caf-2b7ac440e7dc&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/OUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchOUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c651ca001695a3e2b25c08981b92fa50&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/OUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:44,&quot;second&quot;:58,&quot;nano&quot;:592512700}},&quot;historyId&quot;:&quot;d46ec52f-53cb-4024-8b94-58281ec85e61&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/OUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchOUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c651ca001695a3e2b25c08981b92fa50&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/OUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:44,&quot;second&quot;:58,&quot;nano&quot;:168733300}},&quot;historyId&quot;:&quot;a4648d3b-844b-401e-a183-0b364007c7db&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/OUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchOUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c651ca001695a3e2b25c08981b92fa50&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/OUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:44,&quot;second&quot;:57,&quot;nano&quot;:738337900}},&quot;historyId&quot;:&quot;96432257-bfc1-43f7-8317-1015487c09c7&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/OUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchOUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c651ca001695a3e2b25c08981b92fa50&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/OUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:44,&quot;second&quot;:57,&quot;nano&quot;:337219500}},&quot;historyId&quot;:&quot;503be842-3fc7-4ecb-90a5-638269cd6ef1&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/OUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchOUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c651ca001695a3e2b25c08981b92fa50&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/OUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:44,&quot;second&quot;:56,&quot;nano&quot;:849098500}},&quot;historyId&quot;:&quot;3de2c4af-35fc-4ecb-a44a-7fc775edc89e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/OUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchOUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c651ca001695a3e2b25c08981b92fa50&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/OUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:44,&quot;second&quot;:49,&quot;nano&quot;:932322400}},&quot;historyId&quot;:&quot;248d4fe9-868f-46c4-b7f6-b3f2615b6f9a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/OUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchOUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c651ca001695a3e2b25c08981b92fa50&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/OUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:44,&quot;second&quot;:49,&quot;nano&quot;:490191000}},&quot;historyId&quot;:&quot;be57c3df-8951-4311-9b75-5be04eec6f32&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/OUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchOUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c651ca001695a3e2b25c08981b92fa50&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/OUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:44,&quot;second&quot;:49,&quot;nano&quot;:85182900}},&quot;historyId&quot;:&quot;211ebbf3-cd21-406c-a8d7-88f3590f6290&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/OUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchOUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c651ca001695a3e2b25c08981b92fa50&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/OUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:44,&quot;second&quot;:48,&quot;nano&quot;:651312900}},&quot;historyId&quot;:&quot;2b653724-d1c9-423b-918a-cd8860e8745d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/OUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchOUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c651ca001695a3e2b25c08981b92fa50&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/OUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:44,&quot;second&quot;:48,&quot;nano&quot;:217604700}},&quot;historyId&quot;:&quot;06a854f4-b6b9-4b12-a5ac-4f5117dab811&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/OUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchOUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c651ca001695a3e2b25c08981b92fa50&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/OUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:44,&quot;second&quot;:47,&quot;nano&quot;:772167300}},&quot;historyId&quot;:&quot;711c8a66-1aca-4ada-9108-b8ee7f1d917c&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/OUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchOUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c651ca001695a3e2b25c08981b92fa50&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/OUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:44,&quot;second&quot;:47,&quot;nano&quot;:355825900}},&quot;historyId&quot;:&quot;96b964d6-e32b-48aa-bc36-437e6812bfee&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/OUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchOUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c651ca001695a3e2b25c08981b92fa50&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/OUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:44,&quot;second&quot;:46,&quot;nano&quot;:811126300}},&quot;historyId&quot;:&quot;7b182fbe-ce0d-4d6e-acd2-97363cb13c7c&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/OUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchOUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c651ca001695a3e2b25c08981b92fa50&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/OUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:44,&quot;second&quot;:46,&quot;nano&quot;:201050200}},&quot;historyId&quot;:&quot;d5d7ab0a-90c9-4d1f-a8fc-486bcb4e8a2c&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/OUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchOUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c651ca001695a3e2b25c08981b92fa50&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/OUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:44,&quot;second&quot;:41,&quot;nano&quot;:503678000}},&quot;historyId&quot;:&quot;0724c412-5db4-4d80-a979-265ca465f8d3&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/oUserMm/OUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.userMm.Controller.AdminOUserMmController&quot;,&quot;methodName&quot;:&quot;fetchOUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;c651ca001695a3e2b25c08981b92fa50&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/oUserMm/OUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:23},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:43,&quot;second&quot;:59,&quot;nano&quot;:952480600}},&quot;historyId&quot;:&quot;3e70f805-e193-4698-ac35-353883e93c9f&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/verificationReg&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.auth.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;verificationReg&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;dabd42542bed8a8e70f43b37cbf8ebc0&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/verificationReg&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;regID\&quot;: \&quot;a1ee613a-5ae0-4153-b9a1-debf7e781314\&quot;,\n  \&quot;code\&quot;: \&quot;661694\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:20},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:44,&quot;second&quot;:59,&quot;nano&quot;:298408700}},&quot;historyId&quot;:&quot;78c6c4d5-3286-4cfb-9ee5-c1d2c1f619c5&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/initiateReg&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.auth.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;register&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ef26bcc325a8dceab1c49a6e1d830ccb&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/initiateReg&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;,\n  \&quot;email\&quot;: \&quot;2423580694@qq.com\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:20},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:44,&quot;second&quot;:23,&quot;nano&quot;:380624700}},&quot;historyId&quot;:&quot;1964940a-3008-4790-8f16-4ee4c0e67338&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/verificationReg&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.auth.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;verificationReg&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;dabd42542bed8a8e70f43b37cbf8ebc0&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/verificationReg&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;regID\&quot;: \&quot;0704c906-1bee-4450-93dd-ddcd58cb38dc\&quot;,\n  \&quot;code\&quot;: \&quot;281073\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:20},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:43,&quot;second&quot;:55,&quot;nano&quot;:101134400}},&quot;historyId&quot;:&quot;a2795c1b-bf6c-43d5-89f5-d1d3f3dacdcd&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/initiateReg&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.auth.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;register&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ef26bcc325a8dceab1c49a6e1d830ccb&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/initiateReg&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;,\n  \&quot;email\&quot;: \&quot;2423580694@qq.com\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:20},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:43,&quot;second&quot;:14,&quot;nano&quot;:830475100}},&quot;historyId&quot;:&quot;8b6d181c-7d9f-4854-813b-eca13a033d95&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/verificationReg&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.auth.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;verificationReg&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;dabd42542bed8a8e70f43b37cbf8ebc0&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/verificationReg&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;regID\&quot;: \&quot;0edb3465-58cf-4657-a2a3-1d70a5131ba5\&quot;,\n  \&quot;code\&quot;: \&quot;889996\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:20},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:39,&quot;second&quot;:41,&quot;nano&quot;:747401800}},&quot;historyId&quot;:&quot;1b93abe8-9d41-4851-b5be-a0d0f0ee2723&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/initiateReg&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.auth.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;register&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ef26bcc325a8dceab1c49a6e1d830ccb&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/initiateReg&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;,\n  \&quot;email\&quot;: \&quot;2423580694@qq.com\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:20},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:37,&quot;second&quot;:50,&quot;nano&quot;:123762400}},&quot;historyId&quot;:&quot;cd29fd9b-a62e-4e92-b576-33d48d76b672&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/initiateReg&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.auth.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;register&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ef26bcc325a8dceab1c49a6e1d830ccb&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/initiateReg&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;username&quot;,&quot;value&quot;:&quot;holic_&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;},{&quot;key&quot;:&quot;password&quot;,&quot;value&quot;:&quot;m13245jia&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;},{&quot;key&quot;:&quot;email&quot;,&quot;value&quot;:&quot;2423580694@qq.com&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:20},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:35,&quot;second&quot;:25,&quot;nano&quot;:699139600}},&quot;historyId&quot;:&quot;374755ce-9e1f-4652-a46d-cb94dbeb2614&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/initiateReg&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.auth.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;register&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ef26bcc325a8dceab1c49a6e1d830ccb&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/initiateReg&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;username&quot;,&quot;value&quot;:&quot;holic_&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;},{&quot;key&quot;:&quot;password&quot;,&quot;value&quot;:&quot;m13245jia&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;},{&quot;key&quot;:&quot;email&quot;,&quot;value&quot;:&quot;2423580694@qq.com&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:20},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:35,&quot;second&quot;:25,&quot;nano&quot;:142622800}},&quot;historyId&quot;:&quot;2444c709-c816-4282-bc54-60e84a75ba4e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/initiateReg&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.auth.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;register&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ef26bcc325a8dceab1c49a6e1d830ccb&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/initiateReg&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;username&quot;,&quot;value&quot;:&quot;holic_&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;},{&quot;key&quot;:&quot;password&quot;,&quot;value&quot;:&quot;m13245jia&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;},{&quot;key&quot;:&quot;email&quot;,&quot;value&quot;:&quot;2423580694@qq.com&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:20},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:35,&quot;second&quot;:12,&quot;nano&quot;:238751100}},&quot;historyId&quot;:&quot;56455075-3db3-4841-8773-dc4d64b92eb5&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:18},&quot;time&quot;:{&quot;hour&quot;:11,&quot;minute&quot;:35,&quot;second&quot;:50,&quot;nano&quot;:157831000}},&quot;historyId&quot;:&quot;54be943b-7ad0-4863-a29b-baae723cdd05&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:18},&quot;time&quot;:{&quot;hour&quot;:11,&quot;minute&quot;:35,&quot;second&quot;:35,&quot;nano&quot;:452794700}},&quot;historyId&quot;:&quot;32bef5bc-52c4-4c59-a1b3-c684b7f18e35&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:18},&quot;time&quot;:{&quot;hour&quot;:11,&quot;minute&quot;:35,&quot;second&quot;:29,&quot;nano&quot;:947527200}},&quot;historyId&quot;:&quot;6be187d5-471d-45d1-bf30-9acfa9f6e270&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:18},&quot;time&quot;:{&quot;hour&quot;:11,&quot;minute&quot;:34,&quot;second&quot;:17,&quot;nano&quot;:647487300}},&quot;historyId&quot;:&quot;c9c72f0d-2f14-4091-a920-9afb600eee41&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:18},&quot;time&quot;:{&quot;hour&quot;:11,&quot;minute&quot;:33,&quot;second&quot;:46,&quot;nano&quot;:607018700}},&quot;historyId&quot;:&quot;5c61ef39-1769-4142-8d04-e940de0677bb&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:18},&quot;time&quot;:{&quot;hour&quot;:11,&quot;minute&quot;:33,&quot;second&quot;:33,&quot;nano&quot;:472991100}},&quot;historyId&quot;:&quot;e1de7ef0-d4fe-46aa-8434-e97e9d5ca881&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:18},&quot;time&quot;:{&quot;hour&quot;:11,&quot;minute&quot;:29,&quot;second&quot;:34,&quot;nano&quot;:679124700}},&quot;historyId&quot;:&quot;9c837fb8-f555-4110-9402-81cf79c3b7a0&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:18},&quot;time&quot;:{&quot;hour&quot;:11,&quot;minute&quot;:29,&quot;second&quot;:30,&quot;nano&quot;:640020400}},&quot;historyId&quot;:&quot;ed4a6ccf-59bc-42de-8b88-da2980891f12&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:18},&quot;time&quot;:{&quot;hour&quot;:11,&quot;minute&quot;:28,&quot;second&quot;:46,&quot;nano&quot;:99659500}},&quot;historyId&quot;:&quot;e9ca3a58-f158-4b8a-9323-eed770b00517&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:18},&quot;time&quot;:{&quot;hour&quot;:11,&quot;minute&quot;:28,&quot;second&quot;:40,&quot;nano&quot;:669501300}},&quot;historyId&quot;:&quot;13c237d9-3034-4d43-a4dc-d87042a9ab0e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:18},&quot;time&quot;:{&quot;hour&quot;:11,&quot;minute&quot;:26,&quot;second&quot;:4,&quot;nano&quot;:138746400}},&quot;historyId&quot;:&quot;5e11dbfe-8419-482b-bfad-35891678397d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:18},&quot;time&quot;:{&quot;hour&quot;:11,&quot;minute&quot;:24,&quot;second&quot;:45,&quot;nano&quot;:789255200}},&quot;historyId&quot;:&quot;c95a0b20-0bc2-4a05-90d6-cabb2a817b93&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:18},&quot;time&quot;:{&quot;hour&quot;:11,&quot;minute&quot;:23,&quot;second&quot;:53,&quot;nano&quot;:816301100}},&quot;historyId&quot;:&quot;57b7fb96-4998-467a-bf6a-336b43b78140&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:18},&quot;time&quot;:{&quot;hour&quot;:11,&quot;minute&quot;:22,&quot;second&quot;:35,&quot;nano&quot;:8653300}},&quot;historyId&quot;:&quot;a03195c0-3e12-4871-a809-94983e0d1afa&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:18},&quot;time&quot;:{&quot;hour&quot;:11,&quot;minute&quot;:22,&quot;second&quot;:34,&quot;nano&quot;:596477500}},&quot;historyId&quot;:&quot;15211236-c9b6-44bf-ad94-6db02f5d5148&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:18},&quot;time&quot;:{&quot;hour&quot;:11,&quot;minute&quot;:22,&quot;second&quot;:33,&quot;nano&quot;:395821700}},&quot;historyId&quot;:&quot;d4612e62-093b-4084-81c7-5e0ce8163790&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:18},&quot;time&quot;:{&quot;hour&quot;:11,&quot;minute&quot;:22,&quot;second&quot;:6,&quot;nano&quot;:369287000}},&quot;historyId&quot;:&quot;78b529b9-312d-46d4-9c65-2b7d8e969835&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:18},&quot;time&quot;:{&quot;hour&quot;:11,&quot;minute&quot;:21,&quot;second&quot;:56,&quot;nano&quot;:164406800}},&quot;historyId&quot;:&quot;7cb96c0a-d138-43b0-94d6-97be19ef0126&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/getUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;getUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取用户总数&quot;,&quot;description&quot;:&quot;获取用户总数&quot;,&quot;methodName&quot;:&quot;getUserCount&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;02f6d7cf8c098b98fa40699c891c84c6&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/getUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:18},&quot;time&quot;:{&quot;hour&quot;:0,&quot;minute&quot;:25,&quot;second&quot;:43,&quot;nano&quot;:336768700}},&quot;historyId&quot;:&quot;56e0b506-545a-4907-bcce-498bd5f96655&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/getUserCount&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;getUserCount&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取用户总数&quot;,&quot;description&quot;:&quot;获取用户总数&quot;,&quot;methodName&quot;:&quot;getUserCount&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;02f6d7cf8c098b98fa40699c891c84c6&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/getUserCount&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:23,&quot;minute&quot;:53,&quot;second&quot;:48,&quot;nano&quot;:190304800}},&quot;historyId&quot;:&quot;93e18615-1d2e-4cb6-9250-99ac51ff182b&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:23,&quot;minute&quot;:30,&quot;second&quot;:13,&quot;nano&quot;:318737700}},&quot;historyId&quot;:&quot;70766b33-3bfe-4551-9089-06f19cf85578&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8f5e-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:23,&quot;minute&quot;:29,&quot;second&quot;:58,&quot;nano&quot;:406934100}},&quot;historyId&quot;:&quot;2f3c2662-7ef7-492a-9d8d-fea2ef4ce55b&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8f5e-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:23,&quot;minute&quot;:29,&quot;second&quot;:55,&quot;nano&quot;:750624300}},&quot;historyId&quot;:&quot;3b9902a1-0218-4c6b-bf62-161c6190b7c0&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:23,&quot;minute&quot;:26,&quot;second&quot;:23,&quot;nano&quot;:20551600}},&quot;historyId&quot;:&quot;17133810-defb-4ec1-b4ff-5931be56186b&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:22,&quot;minute&quot;:47,&quot;second&quot;:21,&quot;nano&quot;:306174700}},&quot;historyId&quot;:&quot;44042d3d-743b-4f68-a242-6c4fe28892b8&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8f5e-062452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:22,&quot;minute&quot;:46,&quot;second&quot;:53,&quot;nano&quot;:877723300}},&quot;historyId&quot;:&quot;7018fcbd-f9b1-4472-ab50-e84cdc88d00b&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8f5e-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:22,&quot;minute&quot;:43,&quot;second&quot;:39,&quot;nano&quot;:88192000}},&quot;historyId&quot;:&quot;0a52d3ce-d6b0-4413-b55a-050ea0004296&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8f5e-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:22,&quot;minute&quot;:43,&quot;second&quot;:5,&quot;nano&quot;:880450000}},&quot;historyId&quot;:&quot;ac9a8bc6-ceeb-49e6-969c-dc18e6bf64d6&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;d8ed367c-af46-47c2-8eb5-ee58360f9ea86&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:22,&quot;minute&quot;:42,&quot;second&quot;:35,&quot;nano&quot;:96688100}},&quot;historyId&quot;:&quot;d04aa302-6b86-4d25-b92d-8945d20ef061&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8f5e-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:22,&quot;minute&quot;:17,&quot;second&quot;:56,&quot;nano&quot;:58598500}},&quot;historyId&quot;:&quot;8c3229a2-746e-4d14-b743-c4810b01cee0&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:21,&quot;minute&quot;:29,&quot;second&quot;:8,&quot;nano&quot;:747022600}},&quot;historyId&quot;:&quot;66f078b3-49a5-4549-9ef5-2fcd68485d81&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a548fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:21,&quot;minute&quot;:28,&quot;second&quot;:48,&quot;nano&quot;:495423400}},&quot;historyId&quot;:&quot;bc3de2ef-d736-467a-8018-633d643879c9&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a548fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:21,&quot;minute&quot;:28,&quot;second&quot;:48,&quot;nano&quot;:153946800}},&quot;historyId&quot;:&quot;8819f713-be7f-49b4-b31b-2b4bf4d1c78c&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a548fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:21,&quot;minute&quot;:28,&quot;second&quot;:47,&quot;nano&quot;:919700900}},&quot;historyId&quot;:&quot;fbf85cee-aec4-4df0-a38d-89ec7966ab8a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a548fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:21,&quot;minute&quot;:28,&quot;second&quot;:47,&quot;nano&quot;:725947400}},&quot;historyId&quot;:&quot;19849b14-6cea-4962-ac13-327b03582eb5&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a548fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:21,&quot;minute&quot;:28,&quot;second&quot;:47,&quot;nano&quot;:513370400}},&quot;historyId&quot;:&quot;529818b1-346f-417c-80a6-87c2d96180ca&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a548fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:21,&quot;minute&quot;:28,&quot;second&quot;:47,&quot;nano&quot;:319459800}},&quot;historyId&quot;:&quot;7b9be564-3dca-466b-86f5-694bb437b20c&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a548fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:21,&quot;minute&quot;:28,&quot;second&quot;:47,&quot;nano&quot;:136125100}},&quot;historyId&quot;:&quot;8eae379b-2797-4043-9565-00baf9890c8c&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a548fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:21,&quot;minute&quot;:28,&quot;second&quot;:46,&quot;nano&quot;:944294500}},&quot;historyId&quot;:&quot;799afd82-adac-47ab-b5f3-aed7b25ad299&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a548fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:21,&quot;minute&quot;:28,&quot;second&quot;:46,&quot;nano&quot;:761440700}},&quot;historyId&quot;:&quot;4580435e-865b-40bb-b1de-4aefeee1f905&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a548fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:21,&quot;minute&quot;:28,&quot;second&quot;:46,&quot;nano&quot;:583696700}},&quot;historyId&quot;:&quot;30571f15-4d82-4c7d-98ae-3b3afc0a8eb3&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a548fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:21,&quot;minute&quot;:28,&quot;second&quot;:46,&quot;nano&quot;:388174300}},&quot;historyId&quot;:&quot;95b8d1b7-f6ec-4985-be4f-8addab353315&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a548fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:21,&quot;minute&quot;:28,&quot;second&quot;:46,&quot;nano&quot;:19523800}},&quot;historyId&quot;:&quot;5db55f67-3e26-4f82-8a3a-f789719f1bb3&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a548fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:21,&quot;minute&quot;:28,&quot;second&quot;:45,&quot;nano&quot;:834190000}},&quot;historyId&quot;:&quot;b8ff57ab-211d-4308-99cb-4439d9bc1569&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a548fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:21,&quot;minute&quot;:28,&quot;second&quot;:45,&quot;nano&quot;:624334500}},&quot;historyId&quot;:&quot;35b899b7-640a-46dc-94ff-27cd20f8b8da&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a548fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:21,&quot;minute&quot;:28,&quot;second&quot;:45,&quot;nano&quot;:459949400}},&quot;historyId&quot;:&quot;5b430061-6740-4f5b-8e77-bd1867c6e60c&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a548fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:21,&quot;minute&quot;:28,&quot;second&quot;:18,&quot;nano&quot;:217140000}},&quot;historyId&quot;:&quot;93bb2bb7-0e6b-44dc-95dc-e0d4e255b8a6&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a548fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:21,&quot;minute&quot;:28,&quot;second&quot;:17,&quot;nano&quot;:701876000}},&quot;historyId&quot;:&quot;ad04fe73-cd9f-4ba8-b0d2-8e238a9298c7&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a548fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:21,&quot;minute&quot;:28,&quot;second&quot;:17,&quot;nano&quot;:279976800}},&quot;historyId&quot;:&quot;435c0707-4e7a-450d-b599-9a964c1d430a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a548fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:21,&quot;minute&quot;:28,&quot;second&quot;:16,&quot;nano&quot;:550780500}},&quot;historyId&quot;:&quot;989edee5-9ca6-4d6a-a898-8b3520dd66c7&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a548fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:18,&quot;minute&quot;:21,&quot;second&quot;:41,&quot;nano&quot;:642444200}},&quot;historyId&quot;:&quot;85ec3b4e-a059-4c32-ac2a-a50031274b2c&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:18,&quot;minute&quot;:21,&quot;second&quot;:31,&quot;nano&quot;:88221800}},&quot;historyId&quot;:&quot;81e026e1-8b18-4f99-bda5-5ed8f6ac8af9&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:18,&quot;minute&quot;:21,&quot;second&quot;:20,&quot;nano&quot;:719181600}},&quot;historyId&quot;:&quot;089e9220-ee45-44c1-bd48-6309a0eb0fcd&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:18,&quot;minute&quot;:20,&quot;second&quot;:36,&quot;nano&quot;:816637300}},&quot;historyId&quot;:&quot;287696ff-3ff2-4a75-aee3-9d75d423dfc2&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:18,&quot;minute&quot;:20,&quot;second&quot;:26,&quot;nano&quot;:142274500}},&quot;historyId&quot;:&quot;66ed89a4-0b31-4f14-8d86-d0e41a073ad2&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:18,&quot;minute&quot;:19,&quot;second&quot;:49,&quot;nano&quot;:594150700}},&quot;historyId&quot;:&quot;7024ddec-00f7-4c35-9313-2b128558d46c&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:18,&quot;minute&quot;:18,&quot;second&quot;:39,&quot;nano&quot;:276162600}},&quot;historyId&quot;:&quot;646fde78-1cdf-4569-92b1-5e9fdd477def&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:18,&quot;minute&quot;:18,&quot;second&quot;:22,&quot;nano&quot;:175406900}},&quot;historyId&quot;:&quot;b29ccca2-586c-4a7d-8780-576a2476da87&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;0bb9dbe7-374b-4a78-a8fe-062b452f3b63&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:18,&quot;minute&quot;:18,&quot;second&quot;:16,&quot;nano&quot;:29793100}},&quot;historyId&quot;:&quot;4680743d-0393-441f-aafc-f5c307c86b2b&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxOTk4OTcsImV4cCI6MTcyNjU1OTg5Nywic3ViIjoiR2J1Vkh0V25iViIsInJvbGUiOiJST0xFX0FETUlOIn0.JEOtdzwXfUz7z-Ds8sOHQvtVah9joz-pKPc1KMM1f4Q&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:18,&quot;minute&quot;:18,&quot;second&quot;:9,&quot;nano&quot;:110944100}},&quot;historyId&quot;:&quot;08e6ff42-7148-4df5-be3e-c91140f8bc11&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/verLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;verLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;5bb770719aaae044606a1dba4015b358&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/verLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;logID\&quot;: \&quot;738b4be0-3ea8-48d5-9a05-93779cae18e1\&quot;,\n  \&quot;code\&quot;: \&quot;885717\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:18,&quot;minute&quot;:17,&quot;second&quot;:50,&quot;nano&quot;:17903000}},&quot;historyId&quot;:&quot;c1c43c48-5b89-439d-91c5-266c7cb123f4&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:18,&quot;minute&quot;:15,&quot;second&quot;:49,&quot;nano&quot;:714924000}},&quot;historyId&quot;:&quot;ed06309f-c94d-48ae-b39a-f8a404ff5daa&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:18,&quot;minute&quot;:13,&quot;second&quot;:32,&quot;nano&quot;:701797200}},&quot;historyId&quot;:&quot;2ae175b6-f9e3-43ce-b1e8-e11da2139e5a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:18,&quot;minute&quot;:13,&quot;second&quot;:20,&quot;nano&quot;:245941100}},&quot;historyId&quot;:&quot;75a5be17-00ba-4d39-b6d8-fa2ad37297fd&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:18,&quot;minute&quot;:12,&quot;second&quot;:45,&quot;nano&quot;:457637200}},&quot;historyId&quot;:&quot;36f5af5c-1165-4b4a-8f10-145dac29f394&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:18,&quot;minute&quot;:11,&quot;second&quot;:56,&quot;nano&quot;:834925300}},&quot;historyId&quot;:&quot;bdcc7f0a-cb96-41d8-9e28-2503af681b8e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;d8ed367c-af46-47c2-8eb5-ee58360f9ea86&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:17,&quot;minute&quot;:51,&quot;second&quot;:31,&quot;nano&quot;:470024400}},&quot;historyId&quot;:&quot;aca54fd2-22cc-42b3-9c98-15d5a69e6df5&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;d8ed367c-af46-47c2-8eb5-ee58360f9ea86&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:21,&quot;second&quot;:25,&quot;nano&quot;:503002600}},&quot;historyId&quot;:&quot;9f8fed58-8025-4da3-9405-99616964fcd0&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;d8ed367c-af46-47c2-8eb5-ee58360f9ea86&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:19,&quot;second&quot;:47,&quot;nano&quot;:89298300}},&quot;historyId&quot;:&quot;dfbc7357-ca14-4703-bb0f-16a374ebcc96&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;d8ed367c-af46-47c2-8eb5-ee58360f9ea86&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:4,&quot;second&quot;:36,&quot;nano&quot;:506089400}},&quot;historyId&quot;:&quot;f056a06b-11fd-4203-bb5a-52659179bf62&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;d8ed367c-af46-47c2-8eb5-ee58360f9ea86&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:3,&quot;second&quot;:38,&quot;nano&quot;:789163200}},&quot;historyId&quot;:&quot;27cace41-8322-40fd-b201-fb11ca46e1b2&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;d8ed367c-af46-47c2-8eb5-ee8360f9ea86&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:3,&quot;second&quot;:25,&quot;nano&quot;:194551300}},&quot;historyId&quot;:&quot;fbe15454-bfd3-4020-a12b-bb1bef389293&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;bc54f9bb452f6f9a6e92b4d161a7176f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/login&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:3,&quot;second&quot;:14,&quot;nano&quot;:283540900}},&quot;historyId&quot;:&quot;198446b5-dee9-457e-9f55-885547354383&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f9a8c41f-0fba-42f1-ba90-1733979ec506&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:3,&quot;second&quot;:3,&quot;nano&quot;:301115600}},&quot;historyId&quot;:&quot;2b6dfd23-76c5-457c-a5a7-8a4045e757eb&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f9a8c41f-0fba-42f1-ba90-1733979ec506&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:2,&quot;second&quot;:28,&quot;nano&quot;:723665600}},&quot;historyId&quot;:&quot;5aec04af-0b36-4a59-a845-9d937edbf218&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f9a8c41f-0fba-42f1-ba90-1733979ec506&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:58,&quot;second&quot;:54,&quot;nano&quot;:978961300}},&quot;historyId&quot;:&quot;79d0a8b8-d47d-43d6-952b-781ed1df7785&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f9a8c41f-0fba-42f1-ba90-1733979ec506&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:58,&quot;second&quot;:31,&quot;nano&quot;:820975500}},&quot;historyId&quot;:&quot;fb553b5d-2e89-418b-8a34-ee574a9f4e79&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f55d2ae6-a5f4-4e7f-b5ad-4e09ac9c1423&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:58,&quot;second&quot;:28,&quot;nano&quot;:133733700}},&quot;historyId&quot;:&quot;f38b07d2-7f07-494a-addc-b0380a898f77&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;bc54f9bb452f6f9a6e92b4d161a7176f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/login&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:58,&quot;second&quot;:6,&quot;nano&quot;:729949600}},&quot;historyId&quot;:&quot;8bc84dc4-cef4-4659-9e7c-56de71bfd5a9&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;bc54f9bb452f6f9a6e92b4d161a7176f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/login&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:56,&quot;second&quot;:56,&quot;nano&quot;:516197600}},&quot;historyId&quot;:&quot;7a64d291-68d7-4523-9a07-f073ebc9d7ee&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f55d2ae6-a5f4-4e7f-b5ad-4e09ac9c1423&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:55,&quot;second&quot;:30,&quot;nano&quot;:706400200}},&quot;historyId&quot;:&quot;2a942272-095b-4063-b827-07ce5b46b620&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f55d2ae6-a5f4-4e7f-b5ad-4e09ac9c1423&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:54,&quot;second&quot;:52,&quot;nano&quot;:438012500}},&quot;historyId&quot;:&quot;0b622303-73f3-449e-861e-87f277e7dff6&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f55d2ae6-a5f4-4e7f-b5ad-4e09ac9c1423&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:54,&quot;second&quot;:52,&quot;nano&quot;:222170500}},&quot;historyId&quot;:&quot;c327bbae-c84f-48b4-adc7-a205cb0fdfaf&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f55d2ae6-a5f4-4e7f-b5ad-4e09ac9c1423&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:54,&quot;second&quot;:52,&quot;nano&quot;:26041500}},&quot;historyId&quot;:&quot;07ebc58b-9d86-43bb-8442-bc2299786ddf&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f55d2ae6-a5f4-4e7f-b5ad-4e09ac9c1423&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:54,&quot;second&quot;:51,&quot;nano&quot;:794915800}},&quot;historyId&quot;:&quot;0a902d95-6b1d-496e-adf8-6e4c457797da&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f55d2ae6-a5f4-4e7f-b5ad-4e09ac9c1423&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:54,&quot;second&quot;:50,&quot;nano&quot;:912588800}},&quot;historyId&quot;:&quot;c6840e33-00a4-444f-9743-4c1b1afb0464&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f55d2ae6-a5f4-4e7f-b5ad-4e09ac9c1423&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:54,&quot;second&quot;:50,&quot;nano&quot;:521256600}},&quot;historyId&quot;:&quot;404fd470-9492-4bfa-867b-a715dbd7f824&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f55d2ae6-a5f4-4e7f-b5ad-4e09ac9c1423&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:54,&quot;second&quot;:50,&quot;nano&quot;:33049100}},&quot;historyId&quot;:&quot;16dfe606-d7bb-45c8-9b38-a192bb2acd54&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f55d2ae6-a5f4-4e7f-b5ad-4e09ac9c1423&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:54,&quot;second&quot;:49,&quot;nano&quot;:472537200}},&quot;historyId&quot;:&quot;bfee90e1-da88-4952-9cc6-98924c5f814e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f55d2ae6-a5f4-4e7f-b5ad-4e09ac9c1423&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:54,&quot;second&quot;:48,&quot;nano&quot;:833728700}},&quot;historyId&quot;:&quot;e23bc0f5-c42c-4194-9105-78f32e998fc1&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f55d2ae6-a5f4-4e7f-b5ad-4e09ac9c1423&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:54,&quot;second&quot;:48,&quot;nano&quot;:114673000}},&quot;historyId&quot;:&quot;97af7bf7-bd1f-4669-8389-d5a3cde01df9&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f55d2ae6-a5f4-4e7f-b5ad-4e09ac9c1423&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:54,&quot;second&quot;:47,&quot;nano&quot;:803590000}},&quot;historyId&quot;:&quot;8c028772-b45f-42f1-af8b-cfb8934b82f0&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f55d2ae6-a5f4-4e7f-b5ad-4e09ac9c1423&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:54,&quot;second&quot;:47,&quot;nano&quot;:544802800}},&quot;historyId&quot;:&quot;79ae91eb-9ba5-4112-8bb8-f5ec95187156&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f55d2ae6-a5f4-4e7f-b5ad-4e09ac9c1423&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:54,&quot;second&quot;:47,&quot;nano&quot;:317401600}},&quot;historyId&quot;:&quot;24512da9-4b3a-41eb-90d2-9d82981df86d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f55d2ae6-a5f4-4e7f-b5ad-4e09ac9c1423&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:54,&quot;second&quot;:47,&quot;nano&quot;:90150100}},&quot;historyId&quot;:&quot;32679554-2c13-4dd8-a634-669bf713892a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f55d2ae6-a5f4-4e7f-b5ad-4e09ac9c1423&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:54,&quot;second&quot;:46,&quot;nano&quot;:881437800}},&quot;historyId&quot;:&quot;6eabf761-4571-4347-be4b-212da8492e20&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f55d2ae6-a5f4-4e7f-b5ad-4e09ac9c1423&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:54,&quot;second&quot;:46,&quot;nano&quot;:673446900}},&quot;historyId&quot;:&quot;59176a6a-99ea-44cd-95a3-93df78dd2ba7&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f55d2ae6-a5f4-4e7f-b5ad-4e09ac9c1423&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:54,&quot;second&quot;:46,&quot;nano&quot;:450484000}},&quot;historyId&quot;:&quot;f9f7c4ee-ef96-4824-8044-1e69dee2fd1a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f55d2ae6-a5f4-4e7f-b5ad-4e09ac9c1423&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:54,&quot;second&quot;:46,&quot;nano&quot;:247719000}},&quot;historyId&quot;:&quot;a8d493f9-0430-48c0-8d0d-1e9db3c5ac11&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f55d2ae6-a5f4-4e7f-b5ad-4e09ac9c1423&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:54,&quot;second&quot;:46,&quot;nano&quot;:42693900}},&quot;historyId&quot;:&quot;d608c5f5-c59e-4306-88a1-a604d4214794&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f55d2ae6-a5f4-4e7f-b5ad-4e09ac9c1423&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:54,&quot;second&quot;:45,&quot;nano&quot;:831526600}},&quot;historyId&quot;:&quot;31d37f82-2508-4334-93d3-7da9ad5410a8&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f55d2ae6-a5f4-4e7f-b5ad-4e09ac9c1423&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:54,&quot;second&quot;:45,&quot;nano&quot;:657530200}},&quot;historyId&quot;:&quot;8080d881-ca70-4906-b1ad-c183bac3497b&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f55d2ae6-a5f4-4e7f-b5ad-4e09ac9c1423&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:54,&quot;second&quot;:45,&quot;nano&quot;:443695400}},&quot;historyId&quot;:&quot;9ae517c7-7731-4036-b393-3c6486ad8d5a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f55d2ae6-a5f4-4e7f-b5ad-4e09ac9c1423&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:54,&quot;second&quot;:45,&quot;nano&quot;:257067600}},&quot;historyId&quot;:&quot;d8ce52e6-4175-4cd5-b75f-76dc2d64a392&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f55d2ae6-a5f4-4e7f-b5ad-4e09ac9c1423&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:54,&quot;second&quot;:45,&quot;nano&quot;:67013500}},&quot;historyId&quot;:&quot;2a033917-25b3-4788-9f53-18b05f0d0b99&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f55d2ae6-a5f4-4e7f-b5ad-4e09ac9c1423&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:54,&quot;second&quot;:44,&quot;nano&quot;:895397300}},&quot;historyId&quot;:&quot;676a2fde-61c2-4a33-9808-41143f2e57dd&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f55d2ae6-a5f4-4e7f-b5ad-4e09ac9c1423&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:54,&quot;second&quot;:44,&quot;nano&quot;:618822200}},&quot;historyId&quot;:&quot;7e3da324-ae80-46d6-8bc4-19f3b0841819&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f55d2ae6-a5f4-4e7f-b5ad-4e09ac9c1423&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:54,&quot;second&quot;:44,&quot;nano&quot;:173440400}},&quot;historyId&quot;:&quot;745c4e5e-f01d-40a8-a5a7-96d606ec46a4&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f55d2ae6-a5f4-4e7f-b5ad-4e09ac9c1423&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:54,&quot;second&quot;:43,&quot;nano&quot;:747070500}},&quot;historyId&quot;:&quot;f0a96ad9-1a39-48fd-9708-7b26bbaa2d50&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f55d2ae6-a5f4-4e7f-b5ad-4e09ac9c1423&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:54,&quot;second&quot;:43,&quot;nano&quot;:286186900}},&quot;historyId&quot;:&quot;b796e193-0339-4cce-b03d-1676eadb1dc0&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f55d2ae6-a5f4-4e7f-b5ad-4e09ac9c1423&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:54,&quot;second&quot;:42,&quot;nano&quot;:765773100}},&quot;historyId&quot;:&quot;d297bd89-230c-4baa-96a1-7744ba5de034&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f55d2ae6-a5f4-4e7f-b5ad-4e09ac9c1423&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:54,&quot;second&quot;:41,&quot;nano&quot;:494376100}},&quot;historyId&quot;:&quot;1add7683-08b8-45b6-b615-6464fe6b14cf&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f55d2ae6-a5f4-4e7f-b5ad-4e09ac9c1423&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:54,&quot;second&quot;:39,&quot;nano&quot;:333760100}},&quot;historyId&quot;:&quot;111ff222-68f5-4ae0-ab9b-c5d6af673187&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;f55d2ae6-a5f4-4e7f-b5ad-4e09ac9c1423&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:11,&quot;second&quot;:16,&quot;nano&quot;:89395800}},&quot;historyId&quot;:&quot;e0f1f9e7-64ff-4767-8b52-7fee858619ed&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;bc54f9bb452f6f9a6e92b4d161a7176f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/login&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:10,&quot;second&quot;:59,&quot;nano&quot;:684454500}},&quot;historyId&quot;:&quot;afbc1d0f-7452-461c-9a6c-1049076d129f&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;7e46d872-8448-4298-b348-40a54351adc3&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:11,&quot;minute&quot;:5,&quot;second&quot;:51,&quot;nano&quot;:884698100}},&quot;historyId&quot;:&quot;49c95b3a-42e9-428f-9fde-c5fb22c95850&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;7e46d872-8448-4298-b348-40a54351adc3&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:11,&quot;minute&quot;:5,&quot;second&quot;:47,&quot;nano&quot;:35372500}},&quot;historyId&quot;:&quot;3f334d21-084c-4d5a-af5d-da5e68ac7d6e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;bc54f9bb452f6f9a6e92b4d161a7176f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/login&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:11,&quot;minute&quot;:5,&quot;second&quot;:32,&quot;nano&quot;:202821600}},&quot;historyId&quot;:&quot;41ff2518-b8fd-4598-b859-41331f3cae19&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;959cf54d-d69c-4d13-9693-b19d94de698f&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:11,&quot;minute&quot;:5,&quot;second&quot;:16,&quot;nano&quot;:958786700}},&quot;historyId&quot;:&quot;8ac9c58c-24be-4670-89aa-66c118e22b63&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;959cf54d-d69c-4d13-9693-b19d94de698f&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:11,&quot;minute&quot;:4,&quot;second&quot;:52,&quot;nano&quot;:737857300}},&quot;historyId&quot;:&quot;80d1179a-4b4e-4bfb-8354-205807368ff7&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;959cf54d-d69c-4d13-9693-b19d94de698f&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:11,&quot;minute&quot;:4,&quot;second&quot;:52,&quot;nano&quot;:542457300}},&quot;historyId&quot;:&quot;0e618dd8-2c48-4328-be63-736434bbac23&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;959cf54d-d69c-4d13-9693-b19d94de698f&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:11,&quot;minute&quot;:4,&quot;second&quot;:52,&quot;nano&quot;:352309900}},&quot;historyId&quot;:&quot;7de6e8ad-9f76-4dee-ae83-40a5b4a3b909&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;959cf54d-d69c-4d13-9693-b19d94de698f&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:11,&quot;minute&quot;:4,&quot;second&quot;:52,&quot;nano&quot;:105046400}},&quot;historyId&quot;:&quot;3552ba34-30f5-4c7b-9599-eafdc8558f1d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;959cf54d-d69c-4d13-9693-b19d94de698f&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:11,&quot;minute&quot;:4,&quot;second&quot;:51,&quot;nano&quot;:663051000}},&quot;historyId&quot;:&quot;f956979d-815f-45ca-98bc-ac65805a4fdf&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;satoken&quot;,&quot;value&quot;:&quot;959cf54d-d69c-4d13-9693-b19d94de698f&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:11,&quot;minute&quot;:4,&quot;second&quot;:46,&quot;nano&quot;:699912000}},&quot;historyId&quot;:&quot;5d61ff1c-c221-43cf-8e96-cbcb2f13efff&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;959cf54d-d69c-4d13-9693-b19d94de698f&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:11,&quot;minute&quot;:4,&quot;second&quot;:11,&quot;nano&quot;:249145600}},&quot;historyId&quot;:&quot;7521ff58-c28a-4f3a-8836-699eb7dee5e1&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;bc54f9bb452f6f9a6e92b4d161a7176f&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/login&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:11,&quot;minute&quot;:4,&quot;second&quot;:1,&quot;nano&quot;:70506700}},&quot;historyId&quot;:&quot;0baa9e4e-b03e-495d-8fef-771277cca09f&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;54df21db-d20e-42dd-9427-1c81a7a4a56c&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:11,&quot;minute&quot;:3,&quot;second&quot;:49,&quot;nano&quot;:288994900}},&quot;historyId&quot;:&quot;271067b1-4f34-42bd-b948-673e362a1ed7&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;54df21db-d20e-42dd-9427-1c81a7a4a56c&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:11,&quot;minute&quot;:3,&quot;second&quot;:13,&quot;nano&quot;:811519000}},&quot;historyId&quot;:&quot;713dca6b-2005-4a3a-8eae-2edfa1861c81&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;54df21db-d20e-42dd-9427-1c81a7a4a56c&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:11,&quot;minute&quot;:3,&quot;second&quot;:5,&quot;nano&quot;:885792900}},&quot;historyId&quot;:&quot;63451e71-fd19-4d4d-ba9a-6b992152c09a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:11,&quot;minute&quot;:2,&quot;second&quot;:51,&quot;nano&quot;:488980100}},&quot;historyId&quot;:&quot;ab9888df-e5ef-4e5c-8f5d-672eaa70f2e9&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;bc54f9bb452f6f9a6e92b4d161a7176f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/login&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:11,&quot;minute&quot;:2,&quot;second&quot;:33,&quot;nano&quot;:550112700}},&quot;historyId&quot;:&quot;373361e3-6f0e-4b24-b889-002bdad03440&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;bc54f9bb452f6f9a6e92b4d161a7176f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/login&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:56,&quot;second&quot;:18,&quot;nano&quot;:994772200}},&quot;historyId&quot;:&quot;3fb81c32-4dbf-463e-8060-30af12d0e772&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;bc54f9bb452f6f9a6e92b4d161a7176f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/login&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:56,&quot;second&quot;:12,&quot;nano&quot;:935677100}},&quot;historyId&quot;:&quot;b489b2d6-3620-4d60-b7b8-441be6d2b08b&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;bc54f9bb452f6f9a6e92b4d161a7176f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/login&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:48,&quot;second&quot;:40,&quot;nano&quot;:493805300}},&quot;historyId&quot;:&quot;7cc46dcd-a9a6-4332-b7d3-76d2801f0a61&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;bc54f9bb452f6f9a6e92b4d161a7176f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/login&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:48,&quot;second&quot;:31,&quot;nano&quot;:197909700}},&quot;historyId&quot;:&quot;3874b383-5928-4a4b-aac3-f78a9d46696b&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;bc54f9bb452f6f9a6e92b4d161a7176f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/login&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:48,&quot;second&quot;:3,&quot;nano&quot;:955305300}},&quot;historyId&quot;:&quot;a5220b3b-dc58-453f-a91b-02903b13d473&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;bc54f9bb452f6f9a6e92b4d161a7176f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/login&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:47,&quot;second&quot;:51,&quot;nano&quot;:678610400}},&quot;historyId&quot;:&quot;b1196307-042f-4356-a2a2-cedf21d0181c&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;bc54f9bb452f6f9a6e92b4d161a7176f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/login&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:45,&quot;second&quot;:16,&quot;nano&quot;:142611400}},&quot;historyId&quot;:&quot;a9df2a59-a71c-4400-88e3-042763e5a30a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;bc54f9bb452f6f9a6e92b4d161a7176f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/login&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:42,&quot;second&quot;:55,&quot;nano&quot;:695496300}},&quot;historyId&quot;:&quot;335e6dea-eadd-4868-a73f-f12192fe0969&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;bc54f9bb452f6f9a6e92b4d161a7176f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/login&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:42,&quot;second&quot;:54,&quot;nano&quot;:233280400}},&quot;historyId&quot;:&quot;7d485b18-2dbc-48dd-b72e-64162431a8b8&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;bc54f9bb452f6f9a6e92b4d161a7176f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/login&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:42,&quot;second&quot;:53,&quot;nano&quot;:670870200}},&quot;historyId&quot;:&quot;56b33c64-b985-477c-b246-e52e1cf267a9&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;id&quot;:&quot;bc54f9bb452f6f9a6e92b4d161a7176f&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/login&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:17},&quot;time&quot;:{&quot;hour&quot;:10,&quot;minute&quot;:42,&quot;second&quot;:35,&quot;nano&quot;:652397200}},&quot;historyId&quot;:&quot;b2ff838e-e7ea-4fb6-8bcd-9101d6b97b73&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxOTk4OTcsImV4cCI6MTcyNjU1OTg5Nywic3ViIjoiR2J1Vkh0V25iViIsInJvbGUiOiJST0xFX0FETUlOIn0.JEOtdzwXfUz7z-Ds8sOHQvtVah9joz-pKPc1KMM1f4Q&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:13},&quot;time&quot;:{&quot;hour&quot;:17,&quot;minute&quot;:12,&quot;second&quot;:5,&quot;nano&quot;:400856100}},&quot;historyId&quot;:&quot;b8f06279-6ec3-4fb9-afc4-cddde579aaf4&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxOTk4OTcsImV4cCI6MTcyNjU1OTg5Nywic3ViIjoiR2J1Vkh0V25iViIsInJvbGUiOiJST0xFX0FETUlOIn0.JEOtdzwXfUz7z-Ds8sOHQvtVah9joz-pKPc1KMM1f4Q&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:13},&quot;time&quot;:{&quot;hour&quot;:17,&quot;minute&quot;:12,&quot;second&quot;:4,&quot;nano&quot;:854681400}},&quot;historyId&quot;:&quot;4b05c3fd-3b9a-4fc2-9fb2-20a228ff3103&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxOTk4OTcsImV4cCI6MTcyNjU1OTg5Nywic3ViIjoiR2J1Vkh0V25iViIsInJvbGUiOiJST0xFX0FETUlOIn0.JEOtdzwXfUz7z-Ds8sOHQvtVah9joz-pKPc1KMM1f4Q&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:13},&quot;time&quot;:{&quot;hour&quot;:17,&quot;minute&quot;:12,&quot;second&quot;:4,&quot;nano&quot;:195940300}},&quot;historyId&quot;:&quot;f6fbf41e-9e3c-4f76-af0a-fe9510578f3d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxOTk4OTcsImV4cCI6MTcyNjU1OTg5Nywic3ViIjoiR2J1Vkh0V25iViIsInJvbGUiOiJST0xFX0FETUlOIn0.JEOtdzwXfUz7z-Ds8sOHQvtVah9joz-pKPc1KMM1f4Q&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:13},&quot;time&quot;:{&quot;hour&quot;:17,&quot;minute&quot;:12,&quot;second&quot;:3,&quot;nano&quot;:754401700}},&quot;historyId&quot;:&quot;868b1083-a092-417d-ac6c-2d5ff248e7a7&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxOTk4OTcsImV4cCI6MTcyNjU1OTg5Nywic3ViIjoiR2J1Vkh0V25iViIsInJvbGUiOiJST0xFX0FETUlOIn0.JEOtdzwXfUz7z-Ds8sOHQvtVah9joz-pKPc1KMM1f4Q&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:13},&quot;time&quot;:{&quot;hour&quot;:17,&quot;minute&quot;:12,&quot;second&quot;:3,&quot;nano&quot;:120214200}},&quot;historyId&quot;:&quot;f7e7b6f3-d564-4509-ad7b-e546f88708d7&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxOTk4OTcsImV4cCI6MTcyNjU1OTg5Nywic3ViIjoiR2J1Vkh0V25iViIsInJvbGUiOiJST0xFX0FETUlOIn0.JEOtdzwXfUz7z-Ds8sOHQvtVah9joz-pKPc1KMM1f4Q&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:13},&quot;time&quot;:{&quot;hour&quot;:17,&quot;minute&quot;:12,&quot;second&quot;:2,&quot;nano&quot;:297541300}},&quot;historyId&quot;:&quot;3ab10e4c-d765-4d6f-a562-b1c3af1e52f8&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxOTk4OTcsImV4cCI6MTcyNjU1OTg5Nywic3ViIjoiR2J1Vkh0V25iViIsInJvbGUiOiJST0xFX0FETUlOIn0.JEOtdzwXfUz7z-Ds8sOHQvtVah9joz-pKPc1KMM1f4Q&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:13},&quot;time&quot;:{&quot;hour&quot;:17,&quot;minute&quot;:11,&quot;second&quot;:57,&quot;nano&quot;:336425900}},&quot;historyId&quot;:&quot;4efd3f7b-021f-4fe7-9ee0-6d1c852c14c5&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxOTk4OTcsImV4cCI6MTcyNjU1OTg5Nywic3ViIjoiR2J1Vkh0V25iViIsInJvbGUiOiJST0xFX0FETUlOIn0.JEOtdzwXfUz7z-Ds8sOHQvtVah9joz-pKPc1KMM1f4Q&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:13},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:42,&quot;second&quot;:52,&quot;nano&quot;:212717800}},&quot;historyId&quot;:&quot;8c21b85f-e54b-4c74-a374-9e96bce6d9cd&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxOTk4OTcsImV4cCI6MTcyNjU1OTg5Nywic3ViIjoiR2J1Vkh0V25iViIsInJvbGUiOiJST0xFX0FETUlOIn0.JEOtdzwXfUz7z-Ds8sOHQvtVah9joz-pKPc1KMM1f4Q&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:13},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:42,&quot;second&quot;:51,&quot;nano&quot;:979275200}},&quot;historyId&quot;:&quot;f2fc9f70-d7f5-489d-bb2b-c102e6cd191b&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxOTk4OTcsImV4cCI6MTcyNjU1OTg5Nywic3ViIjoiR2J1Vkh0V25iViIsInJvbGUiOiJST0xFX0FETUlOIn0.JEOtdzwXfUz7z-Ds8sOHQvtVah9joz-pKPc1KMM1f4Q&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:13},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:42,&quot;second&quot;:51,&quot;nano&quot;:743317200}},&quot;historyId&quot;:&quot;bce657f9-6d5d-4ad3-89ba-b8bcc9e1647a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxOTk4OTcsImV4cCI6MTcyNjU1OTg5Nywic3ViIjoiR2J1Vkh0V25iViIsInJvbGUiOiJST0xFX0FETUlOIn0.JEOtdzwXfUz7z-Ds8sOHQvtVah9joz-pKPc1KMM1f4Q&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:13},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:42,&quot;second&quot;:51,&quot;nano&quot;:559253000}},&quot;historyId&quot;:&quot;fb08605a-0034-4616-a469-bff8d6003f36&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxOTk4OTcsImV4cCI6MTcyNjU1OTg5Nywic3ViIjoiR2J1Vkh0V25iViIsInJvbGUiOiJST0xFX0FETUlOIn0.JEOtdzwXfUz7z-Ds8sOHQvtVah9joz-pKPc1KMM1f4Q&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:13},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:42,&quot;second&quot;:51,&quot;nano&quot;:354337500}},&quot;historyId&quot;:&quot;d290d87e-60a4-4bde-9c51-be1596a4af80&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxOTk4OTcsImV4cCI6MTcyNjU1OTg5Nywic3ViIjoiR2J1Vkh0V25iViIsInJvbGUiOiJST0xFX0FETUlOIn0.JEOtdzwXfUz7z-Ds8sOHQvtVah9joz-pKPc1KMM1f4Q&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:13},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:42,&quot;second&quot;:51,&quot;nano&quot;:147042900}},&quot;historyId&quot;:&quot;7bd6e14b-6e0a-43e8-aa6e-d8224daa436d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxOTk4OTcsImV4cCI6MTcyNjU1OTg5Nywic3ViIjoiR2J1Vkh0V25iViIsInJvbGUiOiJST0xFX0FETUlOIn0.JEOtdzwXfUz7z-Ds8sOHQvtVah9joz-pKPc1KMM1f4Q&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:13},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:42,&quot;second&quot;:50,&quot;nano&quot;:932527600}},&quot;historyId&quot;:&quot;a97e42f4-9bd6-4762-8cba-a49e40bce396&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxOTk4OTcsImV4cCI6MTcyNjU1OTg5Nywic3ViIjoiR2J1Vkh0V25iViIsInJvbGUiOiJST0xFX0FETUlOIn0.JEOtdzwXfUz7z-Ds8sOHQvtVah9joz-pKPc1KMM1f4Q&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:13},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:42,&quot;second&quot;:50,&quot;nano&quot;:539234800}},&quot;historyId&quot;:&quot;b1c4cce0-fb61-4945-8a9e-ece18957a09c&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxOTk4OTcsImV4cCI6MTcyNjU1OTg5Nywic3ViIjoiR2J1Vkh0V25iViIsInJvbGUiOiJST0xFX0FETUlOIn0.JEOtdzwXfUz7z-Ds8sOHQvtVah9joz-pKPc1KMM1f4Q&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:13},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:42,&quot;second&quot;:49,&quot;nano&quot;:961178800}},&quot;historyId&quot;:&quot;b227e04f-782e-45b8-aa1d-fc0e53eb1722&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxOTk4OTcsImV4cCI6MTcyNjU1OTg5Nywic3ViIjoiR2J1Vkh0V25iViIsInJvbGUiOiJST0xFX0FETUlOIn0.JEOtdzwXfUz7z-Ds8sOHQvtVah9joz-pKPc1KMM1f4Q&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:13},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:42,&quot;second&quot;:49,&quot;nano&quot;:336836400}},&quot;historyId&quot;:&quot;d1fa80b0-1ea7-4630-81c3-ddf326ed21d1&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxOTk4OTcsImV4cCI6MTcyNjU1OTg5Nywic3ViIjoiR2J1Vkh0V25iViIsInJvbGUiOiJST0xFX0FETUlOIn0.JEOtdzwXfUz7z-Ds8sOHQvtVah9joz-pKPc1KMM1f4Q&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:13},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:42,&quot;second&quot;:48,&quot;nano&quot;:572305600}},&quot;historyId&quot;:&quot;87583a35-5795-4b00-b8f8-adbdf3f492d5&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxOTk4OTcsImV4cCI6MTcyNjU1OTg5Nywic3ViIjoiR2J1Vkh0V25iViIsInJvbGUiOiJST0xFX0FETUlOIn0.JEOtdzwXfUz7z-Ds8sOHQvtVah9joz-pKPc1KMM1f4Q&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:13},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:42,&quot;second&quot;:42,&quot;nano&quot;:749165400}},&quot;historyId&quot;:&quot;fdb96cde-71d9-41d2-a759-b5607ae98f1a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxOTk4OTcsImV4cCI6MTcyNjU1OTg5Nywic3ViIjoiR2J1Vkh0V25iViIsInJvbGUiOiJST0xFX0FETUlOIn0.JEOtdzwXfUz7z-Ds8sOHQvtVah9joz-pKPc1KMM1f4Q&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:13},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:42,&quot;second&quot;:35,&quot;nano&quot;:829079800}},&quot;historyId&quot;:&quot;ea4a4bfd-b177-4653-8166-90e249ba7112&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/userMm/fetchInitialUser&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminUserMmController&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取 初始页用户数据&quot;,&quot;description&quot;:&quot;获取 初始页用户数据&quot;,&quot;methodName&quot;:&quot;fetchInitialUser&quot;},&quot;id&quot;:&quot;72f0a88cfd75c7628308f73ab4e9fa55&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/userMm/fetchInitialUser&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;count&quot;,&quot;value&quot;:&quot;10&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:13},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:41,&quot;second&quot;:21,&quot;nano&quot;:285334900}},&quot;historyId&quot;:&quot;53ec9222-42ba-4ef2-9abe-3d7121b7e968&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:31,&quot;second&quot;:35,&quot;nano&quot;:318735900}},&quot;historyId&quot;:&quot;aea3c179-2931-4fed-aaef-bb80925f416b&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:31,&quot;second&quot;:34,&quot;nano&quot;:240924200}},&quot;historyId&quot;:&quot;14a4d20d-295d-4524-9e7e-d466cf6111b9&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:31,&quot;second&quot;:32,&quot;nano&quot;:955400800}},&quot;historyId&quot;:&quot;eaa37e69-8f0e-4f50-aa13-a0d04f26aaa8&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:31,&quot;second&quot;:2,&quot;nano&quot;:684323600}},&quot;historyId&quot;:&quot;3fa90913-e0b5-4412-bae6-d62f3247cce7&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:31,&quot;second&quot;:2,&quot;nano&quot;:58901400}},&quot;historyId&quot;:&quot;67e1f966-52a0-4591-abb5-185152909c25&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:31,&quot;second&quot;:1,&quot;nano&quot;:562429300}},&quot;historyId&quot;:&quot;0d6e63f2-84c7-418f-b7db-07bb48a468cd&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:31,&quot;second&quot;:0,&quot;nano&quot;:926299100}},&quot;historyId&quot;:&quot;e71d4123-9757-4755-a6c0-396772decc36&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:31,&quot;second&quot;:0,&quot;nano&quot;:439802500}},&quot;historyId&quot;:&quot;9901d979-c9d5-4f6e-9520-c2f44919d04f&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:30,&quot;second&quot;:59,&quot;nano&quot;:969625600}},&quot;historyId&quot;:&quot;21f6a7ca-831f-4def-bbf0-ca937cae7a91&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:30,&quot;second&quot;:59,&quot;nano&quot;:531394600}},&quot;historyId&quot;:&quot;a5997d3e-a47a-4f0b-b9fa-6e7238945f96&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:30,&quot;second&quot;:59,&quot;nano&quot;:95700900}},&quot;historyId&quot;:&quot;09d68a7c-b006-47f2-a96b-9aadf7521fb7&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:30,&quot;second&quot;:58,&quot;nano&quot;:696444800}},&quot;historyId&quot;:&quot;6e8a53c3-463e-42c1-89d9-777a8a37e2e3&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:30,&quot;second&quot;:58,&quot;nano&quot;:306375200}},&quot;historyId&quot;:&quot;191f8611-64a0-4c32-a099-e20c87030d3d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:30,&quot;second&quot;:57,&quot;nano&quot;:699784300}},&quot;historyId&quot;:&quot;f31fb7a2-1a2c-420e-84db-0d3c067a8fce&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:30,&quot;second&quot;:55,&quot;nano&quot;:556909300}},&quot;historyId&quot;:&quot;d5ed4d27-f7ba-47ca-841f-4f64810ac46f&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:29,&quot;second&quot;:47,&quot;nano&quot;:485320100}},&quot;historyId&quot;:&quot;7bf5efbc-fa0f-4fda-9f81-08348ea9b9d3&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:29,&quot;second&quot;:45,&quot;nano&quot;:165680600}},&quot;historyId&quot;:&quot;78b203a6-783e-4c6e-b43c-5c5ee257cce7&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:29,&quot;second&quot;:29,&quot;nano&quot;:163482200}},&quot;historyId&quot;:&quot;9e267e10-2d3f-40af-ba33-15a77daf8c98&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:24,&quot;second&quot;:0,&quot;nano&quot;:285686200}},&quot;historyId&quot;:&quot;d843fa67-8d11-4e82-8cf3-77ff9f026e89&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:23,&quot;second&quot;:59,&quot;nano&quot;:869216500}},&quot;historyId&quot;:&quot;c358beee-4416-47d2-abda-6675f86015bf&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:23,&quot;second&quot;:59,&quot;nano&quot;:450691800}},&quot;historyId&quot;:&quot;9ed1b692-a28e-4051-9200-dbbe0a28d434&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:23,&quot;second&quot;:59,&quot;nano&quot;:3917700}},&quot;historyId&quot;:&quot;82f955f0-7597-4ce0-b906-9ea4c2ea7cfb&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:23,&quot;second&quot;:58,&quot;nano&quot;:495034600}},&quot;historyId&quot;:&quot;ed995344-bda9-435d-94ba-7ce2e1dbfb5e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:23,&quot;second&quot;:58,&quot;nano&quot;:16144500}},&quot;historyId&quot;:&quot;63024ac4-b8fa-4b1a-b647-10e0b9f4a769&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:23,&quot;second&quot;:57,&quot;nano&quot;:461207000}},&quot;historyId&quot;:&quot;c3195e66-1b8b-44d3-aca1-fe9f08e84b18&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:23,&quot;second&quot;:56,&quot;nano&quot;:671344600}},&quot;historyId&quot;:&quot;7577172b-0d54-4bca-a117-55015e0edca6&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:23,&quot;second&quot;:53,&quot;nano&quot;:283484600}},&quot;historyId&quot;:&quot;39d9b8f7-e45f-4450-af0d-a248c5ff8150&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:59,&quot;second&quot;:45,&quot;nano&quot;:221111300}},&quot;historyId&quot;:&quot;71ce2231-67b1-4dce-bb0b-8dde91d4a7f9&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:59,&quot;second&quot;:42,&quot;nano&quot;:328709300}},&quot;historyId&quot;:&quot;4fe3809f-7349-432b-9bfd-04fcd79c312d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:26,&quot;nano&quot;:391135900}},&quot;historyId&quot;:&quot;cf15e971-fd50-4391-9478-6cc141f97b2d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:26,&quot;nano&quot;:137405000}},&quot;historyId&quot;:&quot;7143a236-c6b4-42f0-8a27-0268298e9ae2&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:25,&quot;nano&quot;:932383600}},&quot;historyId&quot;:&quot;acf7ae1a-777e-435a-81fb-e0a524902540&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:25,&quot;nano&quot;:741900500}},&quot;historyId&quot;:&quot;197ecf38-4a96-4798-81d5-69102ced7fe2&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:25,&quot;nano&quot;:500836600}},&quot;historyId&quot;:&quot;116ab5fe-0e9a-4c84-bc49-4023e695c0c4&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:25,&quot;nano&quot;:312122500}},&quot;historyId&quot;:&quot;442ad443-46cd-4983-94c7-8efd711c5abd&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:25,&quot;nano&quot;:111208900}},&quot;historyId&quot;:&quot;3cc91fce-9ce6-46eb-b4a9-0f833ef09193&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:24,&quot;nano&quot;:925384100}},&quot;historyId&quot;:&quot;1b56613b-6182-487f-bbe3-cbfbf145e8ca&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:24,&quot;nano&quot;:603490600}},&quot;historyId&quot;:&quot;58332186-dfca-41a8-88b5-cc8b045b8031&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:24,&quot;nano&quot;:388463200}},&quot;historyId&quot;:&quot;e964863e-d305-4029-947c-dab2d1d1a71f&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:24,&quot;nano&quot;:178277900}},&quot;historyId&quot;:&quot;d86a9cd8-3457-448d-aaae-e3cb9d3192ee&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:23,&quot;nano&quot;:949741900}},&quot;historyId&quot;:&quot;170ad19b-aec5-4169-8590-2c843712e03e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:23,&quot;nano&quot;:746864000}},&quot;historyId&quot;:&quot;295b3098-c5e7-4232-a9a3-be8bcc3b4d13&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:23,&quot;nano&quot;:527347800}},&quot;historyId&quot;:&quot;52aa8cf7-2d00-4c7d-bb43-5a1794e17b7c&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:23,&quot;nano&quot;:349226100}},&quot;historyId&quot;:&quot;4f55962c-6f0a-44c7-ad51-08b2a45de0b8&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:23,&quot;nano&quot;:165474300}},&quot;historyId&quot;:&quot;c3aeda9f-f39b-4fbc-afca-7e545cc35d83&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:22,&quot;nano&quot;:780874700}},&quot;historyId&quot;:&quot;2c3eed09-8054-4241-8a4d-1582ccc06030&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:22,&quot;nano&quot;:432215200}},&quot;historyId&quot;:&quot;bf051687-e5ce-4adf-ad4f-9ce5981c6246&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:22,&quot;nano&quot;:199771600}},&quot;historyId&quot;:&quot;f88fd6b5-f0c7-440d-b3dd-73f2a8f281ff&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:21,&quot;nano&quot;:985115700}},&quot;historyId&quot;:&quot;8acba400-492e-4c0d-b444-2e89f554061e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:21,&quot;nano&quot;:508833000}},&quot;historyId&quot;:&quot;3ae6830a-3085-453e-bb0b-914c65e9a2c9&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:17,&quot;nano&quot;:719286300}},&quot;historyId&quot;:&quot;56378e45-3d65-46ed-b888-6327cb944b52&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:11,&quot;nano&quot;:56180000}},&quot;historyId&quot;:&quot;c5241b5c-c060-4bd8-aa4b-2a1869e69591&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:10,&quot;nano&quot;:234653100}},&quot;historyId&quot;:&quot;e2f5d7a6-b350-4b49-ac72-0ee31a371915&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:8,&quot;nano&quot;:425191100}},&quot;historyId&quot;:&quot;5b8dd451-0bb1-4631-af77-b709ed3bea50&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:51,&quot;second&quot;:42,&quot;nano&quot;:556802000}},&quot;historyId&quot;:&quot;5d08cbf8-f3c1-474c-aaef-45d3445e464d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:51,&quot;second&quot;:41,&quot;nano&quot;:941929500}},&quot;historyId&quot;:&quot;8794d4ce-928f-454a-83aa-f7a3e57a3151&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:51,&quot;second&quot;:37,&quot;nano&quot;:113047500}},&quot;historyId&quot;:&quot;ca1432f2-87d7-4ee3-9681-26f74725806e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:50,&quot;second&quot;:57,&quot;nano&quot;:441904200}},&quot;historyId&quot;:&quot;78f36afc-6a6b-4f9a-802e-c3e3bd611c84&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:50,&quot;second&quot;:56,&quot;nano&quot;:852715700}},&quot;historyId&quot;:&quot;00d20fdf-d538-4ade-b701-57113bb97997&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:50,&quot;second&quot;:56,&quot;nano&quot;:252962800}},&quot;historyId&quot;:&quot;8a0ab9fa-153e-4035-a812-4f1c10ed4453&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:50,&quot;second&quot;:55,&quot;nano&quot;:648928700}},&quot;historyId&quot;:&quot;8167502b-56bb-46e1-8040-ee7b2ac88647&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:50,&quot;second&quot;:55,&quot;nano&quot;:2916300}},&quot;historyId&quot;:&quot;8d766d14-6871-4144-bd94-55846400e22e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:50,&quot;second&quot;:54,&quot;nano&quot;:245054000}},&quot;historyId&quot;:&quot;59914b7c-fb85-4425-bac7-62898caccde0&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:50,&quot;second&quot;:52,&quot;nano&quot;:641148900}},&quot;historyId&quot;:&quot;ffcd910c-ce79-4e37-b6d7-d8daf99265a7&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:50,&quot;second&quot;:52,&quot;nano&quot;:173894900}},&quot;historyId&quot;:&quot;8fa5bd90-f908-4cce-a04c-510431dea648&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:50,&quot;second&quot;:51,&quot;nano&quot;:731834300}},&quot;historyId&quot;:&quot;ecb1343d-0d20-448a-97cf-08e283113550&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:50,&quot;second&quot;:51,&quot;nano&quot;:156002300}},&quot;historyId&quot;:&quot;da6fc09a-a32d-469b-be3e-0d68bf595169&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:50,&quot;second&quot;:50,&quot;nano&quot;:185523900}},&quot;historyId&quot;:&quot;594e9a4a-7a8f-426e-ad37-fbd17836584d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:50,&quot;second&quot;:43,&quot;nano&quot;:750966800}},&quot;historyId&quot;:&quot;29de4e66-53ca-4094-9598-4ef240dbe2b0&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:26,&quot;nano&quot;:874261300}},&quot;historyId&quot;:&quot;841c0f14-fd5a-45ea-b62b-70fd02be857f&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:26,&quot;nano&quot;:368978500}},&quot;historyId&quot;:&quot;5e07a95d-a7c8-43ed-b055-aecd3c5be4d4&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:25,&quot;nano&quot;:610657900}},&quot;historyId&quot;:&quot;dd83e417-70c1-4d81-8fb1-2e16f2e77056&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:25,&quot;nano&quot;:471691800}},&quot;historyId&quot;:&quot;1997fafc-fcf2-48bd-aa8c-ecf840e47530&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:25,&quot;nano&quot;:288617500}},&quot;historyId&quot;:&quot;9f4bbd74-8233-40eb-9999-2129dd2cf8ca&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:25,&quot;nano&quot;:112768900}},&quot;historyId&quot;:&quot;83dcb3c7-b926-4b64-b886-1cdeec8448c5&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:24,&quot;nano&quot;:864363800}},&quot;historyId&quot;:&quot;ae474569-5940-4919-b61c-aea9de353ed1&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:24,&quot;nano&quot;:681400600}},&quot;historyId&quot;:&quot;b6888e51-c29c-4b21-9b3c-38c6a2105c66&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:24,&quot;nano&quot;:512405700}},&quot;historyId&quot;:&quot;95692efa-0bf6-4e23-8e43-06279fb8db45&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:24,&quot;nano&quot;:338126800}},&quot;historyId&quot;:&quot;f53a5fae-9ef5-49b4-8551-9a955cbf87f9&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:24,&quot;nano&quot;:156756200}},&quot;historyId&quot;:&quot;f94094b7-99f0-48bc-a7be-6d94bd775f6e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:23,&quot;nano&quot;:957203000}},&quot;historyId&quot;:&quot;e4d62f38-64dd-43d5-a487-eb5d60600d9a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:23,&quot;nano&quot;:777219300}},&quot;historyId&quot;:&quot;b835a4e0-c3eb-4b8e-8329-966819426c8a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:23,&quot;nano&quot;:570976900}},&quot;historyId&quot;:&quot;32e05483-2723-4573-b6db-08777bddc0b7&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:23,&quot;nano&quot;:405699400}},&quot;historyId&quot;:&quot;a83d3a43-bba4-40d6-88ec-55c76abb5cb9&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:23,&quot;nano&quot;:232803100}},&quot;historyId&quot;:&quot;692316c1-dd75-4cd1-ba6d-da4691515d8e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:23,&quot;nano&quot;:57834600}},&quot;historyId&quot;:&quot;db9fbd1a-68dd-4575-b042-31bf61b3eb5d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:22,&quot;nano&quot;:862500800}},&quot;historyId&quot;:&quot;48c85f3c-630f-4394-88e8-f83245647ed5&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:22,&quot;nano&quot;:682827400}},&quot;historyId&quot;:&quot;b3782d5c-ece6-433d-af5e-6c07d1b9e07e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:15,&quot;nano&quot;:793419800}},&quot;historyId&quot;:&quot;b1277d7d-a204-48e7-b942-daafa51eb141&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:33,&quot;nano&quot;:835009200}},&quot;historyId&quot;:&quot;53dd3433-106e-4120-936e-f141a29f4ce6&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:20,&quot;nano&quot;:493527700}},&quot;historyId&quot;:&quot;9b922155-7a08-4490-aaa9-cd507d14b51e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:20,&quot;nano&quot;:332952600}},&quot;historyId&quot;:&quot;5ebd2c67-9a38-46e8-8afc-52d4cd03d540&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:20,&quot;nano&quot;:150304100}},&quot;historyId&quot;:&quot;d36d260f-1ebc-47ca-a040-a58123fc3d66&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:19,&quot;nano&quot;:978457100}},&quot;historyId&quot;:&quot;60e41c61-cef5-46fe-9974-9c033d08e834&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:19,&quot;nano&quot;:803164300}},&quot;historyId&quot;:&quot;0c48e670-c316-41dd-8cca-4cf89f8af5ac&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:19,&quot;nano&quot;:606943600}},&quot;historyId&quot;:&quot;0e3f12bb-0f19-4f83-986a-6c2e111cb7dd&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:19,&quot;nano&quot;:401732700}},&quot;historyId&quot;:&quot;39dd4da8-40d7-45ca-b54d-85d1c16063de&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:19,&quot;nano&quot;:246526500}},&quot;historyId&quot;:&quot;a6ec198d-6103-4a45-9c20-a24a60eb1550&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:19,&quot;nano&quot;:67354200}},&quot;historyId&quot;:&quot;7a2fa272-a3ed-49cd-a5fb-217bd3b6c0f2&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:18,&quot;nano&quot;:850983500}},&quot;historyId&quot;:&quot;8d0d2ab7-df07-42b5-a46c-7e54f69b85d5&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:18,&quot;nano&quot;:657812100}},&quot;historyId&quot;:&quot;9032d3d0-6104-4c76-8254-2d62f35d33c3&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:18,&quot;nano&quot;:477607000}},&quot;historyId&quot;:&quot;bf93faa9-7843-4cef-8f04-51f95f785f3e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:18,&quot;nano&quot;:295440200}},&quot;historyId&quot;:&quot;c12d6bec-e687-41fa-82dc-e93b0fb4887c&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:18,&quot;nano&quot;:125874600}},&quot;historyId&quot;:&quot;08f8bab7-9f00-4486-9108-037a28fcaf4c&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:17,&quot;nano&quot;:946469400}},&quot;historyId&quot;:&quot;886b2a3e-ee2e-4865-b9d7-9047453e7320&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:17,&quot;nano&quot;:773739300}},&quot;historyId&quot;:&quot;af4def7b-5810-48fa-9543-e39942793c7e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:17,&quot;nano&quot;:583188500}},&quot;historyId&quot;:&quot;764075b0-d544-4f50-8ddf-09c037d2a663&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:17,&quot;nano&quot;:285310400}},&quot;historyId&quot;:&quot;afbce3bd-29f5-46e6-9acf-4ad17f782518&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:16,&quot;nano&quot;:815688800}},&quot;historyId&quot;:&quot;87871cd7-0297-4fcf-bcdc-61b43946c5ea&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:8,&quot;nano&quot;:848016800}},&quot;historyId&quot;:&quot;ee0e88a9-1be0-4822-bfba-6477de2e0ae0&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:42,&quot;second&quot;:26,&quot;nano&quot;:929475700}},&quot;historyId&quot;:&quot;4e65a35c-7884-46da-9725-e9338637e4bb&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:42,&quot;second&quot;:24,&quot;nano&quot;:479713600}},&quot;historyId&quot;:&quot;a13095da-db81-4590-b132-9629dfcf7437&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:42,&quot;second&quot;:23,&quot;nano&quot;:623021700}},&quot;historyId&quot;:&quot;0f10cc9e-2766-462f-93d9-f22b08106468&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:40,&quot;second&quot;:19,&quot;nano&quot;:724488200}},&quot;historyId&quot;:&quot;082c9865-29ab-4617-af73-9a39f161512d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:40,&quot;second&quot;:19,&quot;nano&quot;:550173000}},&quot;historyId&quot;:&quot;b4550428-27b9-4cf0-944c-196d4e0409b2&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:40,&quot;second&quot;:19,&quot;nano&quot;:357034100}},&quot;historyId&quot;:&quot;ccf53bd4-e262-4b81-87b2-47c6d80a5161&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:40,&quot;second&quot;:19,&quot;nano&quot;:195278500}},&quot;historyId&quot;:&quot;fc270d28-433a-4dd7-8252-71becf263220&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:40,&quot;second&quot;:18,&quot;nano&quot;:989065000}},&quot;historyId&quot;:&quot;174e8456-caa8-4077-92be-7046af37ef45&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:40,&quot;second&quot;:18,&quot;nano&quot;:804816000}},&quot;historyId&quot;:&quot;4ec9ccde-4140-44f1-97c7-314285dc1d11&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:40,&quot;second&quot;:18,&quot;nano&quot;:616704900}},&quot;historyId&quot;:&quot;33d97c85-697a-423b-8f35-1445f45ee2ae&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:40,&quot;second&quot;:18,&quot;nano&quot;:419889400}},&quot;historyId&quot;:&quot;17c6ac4c-610f-417e-bfc4-2826178b0af2&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:40,&quot;second&quot;:18,&quot;nano&quot;:231186400}},&quot;historyId&quot;:&quot;94cc16b4-ed86-4cdd-9ed4-a59a6abd69ef&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:40,&quot;second&quot;:18,&quot;nano&quot;:63576700}},&quot;historyId&quot;:&quot;a4a6b49e-62fa-4666-91cc-5b79c17e1589&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:40,&quot;second&quot;:17,&quot;nano&quot;:672785600}},&quot;historyId&quot;:&quot;010ff855-9655-4b1c-a319-a9900bb2d0bd&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:40,&quot;second&quot;:17,&quot;nano&quot;:207581800}},&quot;historyId&quot;:&quot;2cb5bc7a-4e73-4f07-af9e-801267a9c190&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:40,&quot;second&quot;:16,&quot;nano&quot;:619551300}},&quot;historyId&quot;:&quot;2f78a266-21d6-448c-9673-74673d9906ca&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:40,&quot;second&quot;:6,&quot;nano&quot;:848992700}},&quot;historyId&quot;:&quot;d5efb41f-a2a6-4aab-8fd5-d478ee501b64&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:35,&quot;second&quot;:27,&quot;nano&quot;:912146900}},&quot;historyId&quot;:&quot;0117fb67-141d-4301-afcd-0e94ff541e5b&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:34,&quot;second&quot;:11,&quot;nano&quot;:481597300}},&quot;historyId&quot;:&quot;60fc29a7-0d01-439d-8481-bc4e53e6eeb0&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false}]" />
  </component>
</project>