<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CoolRequestHistoryPersistent">
    <option name="historyAPIS" value="[{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:31,&quot;second&quot;:35,&quot;nano&quot;:318735900}},&quot;historyId&quot;:&quot;aea3c179-2931-4fed-aaef-bb80925f416b&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:31,&quot;second&quot;:34,&quot;nano&quot;:240924200}},&quot;historyId&quot;:&quot;14a4d20d-295d-4524-9e7e-d466cf6111b9&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:31,&quot;second&quot;:32,&quot;nano&quot;:955400800}},&quot;historyId&quot;:&quot;eaa37e69-8f0e-4f50-aa13-a0d04f26aaa8&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:31,&quot;second&quot;:2,&quot;nano&quot;:684323600}},&quot;historyId&quot;:&quot;3fa90913-e0b5-4412-bae6-d62f3247cce7&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:31,&quot;second&quot;:2,&quot;nano&quot;:58901400}},&quot;historyId&quot;:&quot;67e1f966-52a0-4591-abb5-185152909c25&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:31,&quot;second&quot;:1,&quot;nano&quot;:562429300}},&quot;historyId&quot;:&quot;0d6e63f2-84c7-418f-b7db-07bb48a468cd&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:31,&quot;second&quot;:0,&quot;nano&quot;:926299100}},&quot;historyId&quot;:&quot;e71d4123-9757-4755-a6c0-396772decc36&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:31,&quot;second&quot;:0,&quot;nano&quot;:439802500}},&quot;historyId&quot;:&quot;9901d979-c9d5-4f6e-9520-c2f44919d04f&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:30,&quot;second&quot;:59,&quot;nano&quot;:969625600}},&quot;historyId&quot;:&quot;21f6a7ca-831f-4def-bbf0-ca937cae7a91&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:30,&quot;second&quot;:59,&quot;nano&quot;:531394600}},&quot;historyId&quot;:&quot;a5997d3e-a47a-4f0b-b9fa-6e7238945f96&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:30,&quot;second&quot;:59,&quot;nano&quot;:95700900}},&quot;historyId&quot;:&quot;09d68a7c-b006-47f2-a96b-9aadf7521fb7&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:30,&quot;second&quot;:58,&quot;nano&quot;:696444800}},&quot;historyId&quot;:&quot;6e8a53c3-463e-42c1-89d9-777a8a37e2e3&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:30,&quot;second&quot;:58,&quot;nano&quot;:306375200}},&quot;historyId&quot;:&quot;191f8611-64a0-4c32-a099-e20c87030d3d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:30,&quot;second&quot;:57,&quot;nano&quot;:699784300}},&quot;historyId&quot;:&quot;f31fb7a2-1a2c-420e-84db-0d3c067a8fce&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:30,&quot;second&quot;:55,&quot;nano&quot;:556909300}},&quot;historyId&quot;:&quot;d5ed4d27-f7ba-47ca-841f-4f64810ac46f&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:29,&quot;second&quot;:47,&quot;nano&quot;:485320100}},&quot;historyId&quot;:&quot;7bf5efbc-fa0f-4fda-9f81-08348ea9b9d3&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:29,&quot;second&quot;:45,&quot;nano&quot;:165680600}},&quot;historyId&quot;:&quot;78b203a6-783e-4c6e-b43c-5c5ee257cce7&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:29,&quot;second&quot;:29,&quot;nano&quot;:163482200}},&quot;historyId&quot;:&quot;9e267e10-2d3f-40af-ba33-15a77daf8c98&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:24,&quot;second&quot;:0,&quot;nano&quot;:285686200}},&quot;historyId&quot;:&quot;d843fa67-8d11-4e82-8cf3-77ff9f026e89&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:23,&quot;second&quot;:59,&quot;nano&quot;:869216500}},&quot;historyId&quot;:&quot;c358beee-4416-47d2-abda-6675f86015bf&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:23,&quot;second&quot;:59,&quot;nano&quot;:450691800}},&quot;historyId&quot;:&quot;9ed1b692-a28e-4051-9200-dbbe0a28d434&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:23,&quot;second&quot;:59,&quot;nano&quot;:3917700}},&quot;historyId&quot;:&quot;82f955f0-7597-4ce0-b906-9ea4c2ea7cfb&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:23,&quot;second&quot;:58,&quot;nano&quot;:495034600}},&quot;historyId&quot;:&quot;ed995344-bda9-435d-94ba-7ce2e1dbfb5e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:23,&quot;second&quot;:58,&quot;nano&quot;:16144500}},&quot;historyId&quot;:&quot;63024ac4-b8fa-4b1a-b647-10e0b9f4a769&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:23,&quot;second&quot;:57,&quot;nano&quot;:461207000}},&quot;historyId&quot;:&quot;c3195e66-1b8b-44d3-aca1-fe9f08e84b18&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:23,&quot;second&quot;:56,&quot;nano&quot;:671344600}},&quot;historyId&quot;:&quot;7577172b-0d54-4bca-a117-55015e0edca6&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:14,&quot;minute&quot;:23,&quot;second&quot;:53,&quot;nano&quot;:283484600}},&quot;historyId&quot;:&quot;39d9b8f7-e45f-4450-af0d-a248c5ff8150&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:59,&quot;second&quot;:45,&quot;nano&quot;:221111300}},&quot;historyId&quot;:&quot;71ce2231-67b1-4dce-bb0b-8dde91d4a7f9&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/login&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;ec8a71e234e7a4bc5ee38b62f40c8d36&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;123456789\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:59,&quot;second&quot;:42,&quot;nano&quot;:328709300}},&quot;historyId&quot;:&quot;4fe3809f-7349-432b-9bfd-04fcd79c312d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:26,&quot;nano&quot;:391135900}},&quot;historyId&quot;:&quot;cf15e971-fd50-4391-9478-6cc141f97b2d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:26,&quot;nano&quot;:137405000}},&quot;historyId&quot;:&quot;7143a236-c6b4-42f0-8a27-0268298e9ae2&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:25,&quot;nano&quot;:932383600}},&quot;historyId&quot;:&quot;acf7ae1a-777e-435a-81fb-e0a524902540&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:25,&quot;nano&quot;:741900500}},&quot;historyId&quot;:&quot;197ecf38-4a96-4798-81d5-69102ced7fe2&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:25,&quot;nano&quot;:500836600}},&quot;historyId&quot;:&quot;116ab5fe-0e9a-4c84-bc49-4023e695c0c4&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:25,&quot;nano&quot;:312122500}},&quot;historyId&quot;:&quot;442ad443-46cd-4983-94c7-8efd711c5abd&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:25,&quot;nano&quot;:111208900}},&quot;historyId&quot;:&quot;3cc91fce-9ce6-46eb-b4a9-0f833ef09193&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:24,&quot;nano&quot;:925384100}},&quot;historyId&quot;:&quot;1b56613b-6182-487f-bbe3-cbfbf145e8ca&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:24,&quot;nano&quot;:603490600}},&quot;historyId&quot;:&quot;58332186-dfca-41a8-88b5-cc8b045b8031&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:24,&quot;nano&quot;:388463200}},&quot;historyId&quot;:&quot;e964863e-d305-4029-947c-dab2d1d1a71f&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:24,&quot;nano&quot;:178277900}},&quot;historyId&quot;:&quot;d86a9cd8-3457-448d-aaae-e3cb9d3192ee&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:23,&quot;nano&quot;:949741900}},&quot;historyId&quot;:&quot;170ad19b-aec5-4169-8590-2c843712e03e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:23,&quot;nano&quot;:746864000}},&quot;historyId&quot;:&quot;295b3098-c5e7-4232-a9a3-be8bcc3b4d13&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:23,&quot;nano&quot;:527347800}},&quot;historyId&quot;:&quot;52aa8cf7-2d00-4c7d-bb43-5a1794e17b7c&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:23,&quot;nano&quot;:349226100}},&quot;historyId&quot;:&quot;4f55962c-6f0a-44c7-ad51-08b2a45de0b8&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:23,&quot;nano&quot;:165474300}},&quot;historyId&quot;:&quot;c3aeda9f-f39b-4fbc-afca-7e545cc35d83&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:22,&quot;nano&quot;:780874700}},&quot;historyId&quot;:&quot;2c3eed09-8054-4241-8a4d-1582ccc06030&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:22,&quot;nano&quot;:432215200}},&quot;historyId&quot;:&quot;bf051687-e5ce-4adf-ad4f-9ce5981c6246&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:22,&quot;nano&quot;:199771600}},&quot;historyId&quot;:&quot;f88fd6b5-f0c7-440d-b3dd-73f2a8f281ff&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:21,&quot;nano&quot;:985115700}},&quot;historyId&quot;:&quot;8acba400-492e-4c0d-b444-2e89f554061e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:21,&quot;nano&quot;:508833000}},&quot;historyId&quot;:&quot;3ae6830a-3085-453e-bb0b-914c65e9a2c9&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:17,&quot;nano&quot;:719286300}},&quot;historyId&quot;:&quot;56378e45-3d65-46ed-b888-6327cb944b52&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:11,&quot;nano&quot;:56180000}},&quot;historyId&quot;:&quot;c5241b5c-c060-4bd8-aa4b-2a1869e69591&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:10,&quot;nano&quot;:234653100}},&quot;historyId&quot;:&quot;e2f5d7a6-b350-4b49-ac72-0ee31a371915&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/admin/auth/test&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.admin.controller.AdminAuthController&quot;,&quot;methodName&quot;:&quot;test&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b234d869da07568889e525b9c772c9a2&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/admin/auth/test&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:53,&quot;second&quot;:8,&quot;nano&quot;:425191100}},&quot;historyId&quot;:&quot;5b8dd451-0bb1-4631-af77-b709ed3bea50&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:51,&quot;second&quot;:42,&quot;nano&quot;:556802000}},&quot;historyId&quot;:&quot;5d08cbf8-f3c1-474c-aaef-45d3445e464d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:51,&quot;second&quot;:41,&quot;nano&quot;:941929500}},&quot;historyId&quot;:&quot;8794d4ce-928f-454a-83aa-f7a3e57a3151&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:51,&quot;second&quot;:37,&quot;nano&quot;:113047500}},&quot;historyId&quot;:&quot;ca1432f2-87d7-4ee3-9681-26f74725806e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:50,&quot;second&quot;:57,&quot;nano&quot;:441904200}},&quot;historyId&quot;:&quot;78f36afc-6a6b-4f9a-802e-c3e3bd611c84&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:50,&quot;second&quot;:56,&quot;nano&quot;:852715700}},&quot;historyId&quot;:&quot;00d20fdf-d538-4ade-b701-57113bb97997&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:50,&quot;second&quot;:56,&quot;nano&quot;:252962800}},&quot;historyId&quot;:&quot;8a0ab9fa-153e-4035-a812-4f1c10ed4453&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:50,&quot;second&quot;:55,&quot;nano&quot;:648928700}},&quot;historyId&quot;:&quot;8167502b-56bb-46e1-8040-ee7b2ac88647&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:50,&quot;second&quot;:55,&quot;nano&quot;:2916300}},&quot;historyId&quot;:&quot;8d766d14-6871-4144-bd94-55846400e22e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:50,&quot;second&quot;:54,&quot;nano&quot;:245054000}},&quot;historyId&quot;:&quot;59914b7c-fb85-4425-bac7-62898caccde0&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:50,&quot;second&quot;:52,&quot;nano&quot;:641148900}},&quot;historyId&quot;:&quot;ffcd910c-ce79-4e37-b6d7-d8daf99265a7&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:50,&quot;second&quot;:52,&quot;nano&quot;:173894900}},&quot;historyId&quot;:&quot;8fa5bd90-f908-4cce-a04c-510431dea648&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:50,&quot;second&quot;:51,&quot;nano&quot;:731834300}},&quot;historyId&quot;:&quot;ecb1343d-0d20-448a-97cf-08e283113550&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:50,&quot;second&quot;:51,&quot;nano&quot;:156002300}},&quot;historyId&quot;:&quot;da6fc09a-a32d-469b-be3e-0d68bf595169&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:50,&quot;second&quot;:50,&quot;nano&quot;:185523900}},&quot;historyId&quot;:&quot;594e9a4a-7a8f-426e-ad37-fbd17836584d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:50,&quot;second&quot;:43,&quot;nano&quot;:750966800}},&quot;historyId&quot;:&quot;29de4e66-53ca-4094-9598-4ef240dbe2b0&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:26,&quot;nano&quot;:874261300}},&quot;historyId&quot;:&quot;841c0f14-fd5a-45ea-b62b-70fd02be857f&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:26,&quot;nano&quot;:368978500}},&quot;historyId&quot;:&quot;5e07a95d-a7c8-43ed-b055-aecd3c5be4d4&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:25,&quot;nano&quot;:610657900}},&quot;historyId&quot;:&quot;dd83e417-70c1-4d81-8fb1-2e16f2e77056&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:25,&quot;nano&quot;:471691800}},&quot;historyId&quot;:&quot;1997fafc-fcf2-48bd-aa8c-ecf840e47530&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:25,&quot;nano&quot;:288617500}},&quot;historyId&quot;:&quot;9f4bbd74-8233-40eb-9999-2129dd2cf8ca&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:25,&quot;nano&quot;:112768900}},&quot;historyId&quot;:&quot;83dcb3c7-b926-4b64-b886-1cdeec8448c5&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:24,&quot;nano&quot;:864363800}},&quot;historyId&quot;:&quot;ae474569-5940-4919-b61c-aea9de353ed1&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:24,&quot;nano&quot;:681400600}},&quot;historyId&quot;:&quot;b6888e51-c29c-4b21-9b3c-38c6a2105c66&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:24,&quot;nano&quot;:512405700}},&quot;historyId&quot;:&quot;95692efa-0bf6-4e23-8e43-06279fb8db45&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:24,&quot;nano&quot;:338126800}},&quot;historyId&quot;:&quot;f53a5fae-9ef5-49b4-8551-9a955cbf87f9&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:24,&quot;nano&quot;:156756200}},&quot;historyId&quot;:&quot;f94094b7-99f0-48bc-a7be-6d94bd775f6e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:23,&quot;nano&quot;:957203000}},&quot;historyId&quot;:&quot;e4d62f38-64dd-43d5-a487-eb5d60600d9a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:23,&quot;nano&quot;:777219300}},&quot;historyId&quot;:&quot;b835a4e0-c3eb-4b8e-8329-966819426c8a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:23,&quot;nano&quot;:570976900}},&quot;historyId&quot;:&quot;32e05483-2723-4573-b6db-08777bddc0b7&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:23,&quot;nano&quot;:405699400}},&quot;historyId&quot;:&quot;a83d3a43-bba4-40d6-88ec-55c76abb5cb9&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:23,&quot;nano&quot;:232803100}},&quot;historyId&quot;:&quot;692316c1-dd75-4cd1-ba6d-da4691515d8e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:23,&quot;nano&quot;:57834600}},&quot;historyId&quot;:&quot;db9fbd1a-68dd-4575-b042-31bf61b3eb5d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:22,&quot;nano&quot;:862500800}},&quot;historyId&quot;:&quot;48c85f3c-630f-4394-88e8-f83245647ed5&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:22,&quot;nano&quot;:682827400}},&quot;historyId&quot;:&quot;b3782d5c-ece6-433d-af5e-6c07d1b9e07e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:46,&quot;second&quot;:15,&quot;nano&quot;:793419800}},&quot;historyId&quot;:&quot;b1277d7d-a204-48e7-b942-daafa51eb141&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:33,&quot;nano&quot;:835009200}},&quot;historyId&quot;:&quot;53dd3433-106e-4120-936e-f141a29f4ce6&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:20,&quot;nano&quot;:493527700}},&quot;historyId&quot;:&quot;9b922155-7a08-4490-aaa9-cd507d14b51e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:20,&quot;nano&quot;:332952600}},&quot;historyId&quot;:&quot;5ebd2c67-9a38-46e8-8afc-52d4cd03d540&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:20,&quot;nano&quot;:150304100}},&quot;historyId&quot;:&quot;d36d260f-1ebc-47ca-a040-a58123fc3d66&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:19,&quot;nano&quot;:978457100}},&quot;historyId&quot;:&quot;60e41c61-cef5-46fe-9974-9c033d08e834&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:19,&quot;nano&quot;:803164300}},&quot;historyId&quot;:&quot;0c48e670-c316-41dd-8cca-4cf89f8af5ac&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:19,&quot;nano&quot;:606943600}},&quot;historyId&quot;:&quot;0e3f12bb-0f19-4f83-986a-6c2e111cb7dd&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:19,&quot;nano&quot;:401732700}},&quot;historyId&quot;:&quot;39dd4da8-40d7-45ca-b54d-85d1c16063de&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:19,&quot;nano&quot;:246526500}},&quot;historyId&quot;:&quot;a6ec198d-6103-4a45-9c20-a24a60eb1550&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:19,&quot;nano&quot;:67354200}},&quot;historyId&quot;:&quot;7a2fa272-a3ed-49cd-a5fb-217bd3b6c0f2&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:18,&quot;nano&quot;:850983500}},&quot;historyId&quot;:&quot;8d0d2ab7-df07-42b5-a46c-7e54f69b85d5&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:18,&quot;nano&quot;:657812100}},&quot;historyId&quot;:&quot;9032d3d0-6104-4c76-8254-2d62f35d33c3&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:18,&quot;nano&quot;:477607000}},&quot;historyId&quot;:&quot;bf93faa9-7843-4cef-8f04-51f95f785f3e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:18,&quot;nano&quot;:295440200}},&quot;historyId&quot;:&quot;c12d6bec-e687-41fa-82dc-e93b0fb4887c&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:18,&quot;nano&quot;:125874600}},&quot;historyId&quot;:&quot;08f8bab7-9f00-4486-9108-037a28fcaf4c&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:17,&quot;nano&quot;:946469400}},&quot;historyId&quot;:&quot;886b2a3e-ee2e-4865-b9d7-9047453e7320&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:17,&quot;nano&quot;:773739300}},&quot;historyId&quot;:&quot;af4def7b-5810-48fa-9543-e39942793c7e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:17,&quot;nano&quot;:583188500}},&quot;historyId&quot;:&quot;764075b0-d544-4f50-8ddf-09c037d2a663&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:17,&quot;nano&quot;:285310400}},&quot;historyId&quot;:&quot;afbce3bd-29f5-46e6-9acf-4ad17f782518&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:16,&quot;nano&quot;:815688800}},&quot;historyId&quot;:&quot;87871cd7-0297-4fcf-bcdc-61b43946c5ea&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:45,&quot;second&quot;:8,&quot;nano&quot;:848016800}},&quot;historyId&quot;:&quot;ee0e88a9-1be0-4822-bfba-6477de2e0ae0&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:42,&quot;second&quot;:26,&quot;nano&quot;:929475700}},&quot;historyId&quot;:&quot;4e65a35c-7884-46da-9725-e9338637e4bb&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:42,&quot;second&quot;:24,&quot;nano&quot;:479713600}},&quot;historyId&quot;:&quot;a13095da-db81-4590-b132-9629dfcf7437&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:42,&quot;second&quot;:23,&quot;nano&quot;:623021700}},&quot;historyId&quot;:&quot;0f10cc9e-2766-462f-93d9-f22b08106468&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:40,&quot;second&quot;:19,&quot;nano&quot;:724488200}},&quot;historyId&quot;:&quot;082c9865-29ab-4617-af73-9a39f161512d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:40,&quot;second&quot;:19,&quot;nano&quot;:550173000}},&quot;historyId&quot;:&quot;b4550428-27b9-4cf0-944c-196d4e0409b2&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:40,&quot;second&quot;:19,&quot;nano&quot;:357034100}},&quot;historyId&quot;:&quot;ccf53bd4-e262-4b81-87b2-47c6d80a5161&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:40,&quot;second&quot;:19,&quot;nano&quot;:195278500}},&quot;historyId&quot;:&quot;fc270d28-433a-4dd7-8252-71becf263220&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:40,&quot;second&quot;:18,&quot;nano&quot;:989065000}},&quot;historyId&quot;:&quot;174e8456-caa8-4077-92be-7046af37ef45&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:40,&quot;second&quot;:18,&quot;nano&quot;:804816000}},&quot;historyId&quot;:&quot;4ec9ccde-4140-44f1-97c7-314285dc1d11&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:40,&quot;second&quot;:18,&quot;nano&quot;:616704900}},&quot;historyId&quot;:&quot;33d97c85-697a-423b-8f35-1445f45ee2ae&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:40,&quot;second&quot;:18,&quot;nano&quot;:419889400}},&quot;historyId&quot;:&quot;17c6ac4c-610f-417e-bfc4-2826178b0af2&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:40,&quot;second&quot;:18,&quot;nano&quot;:231186400}},&quot;historyId&quot;:&quot;94cc16b4-ed86-4cdd-9ed4-a59a6abd69ef&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:40,&quot;second&quot;:18,&quot;nano&quot;:63576700}},&quot;historyId&quot;:&quot;a4a6b49e-62fa-4666-91cc-5b79c17e1589&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:40,&quot;second&quot;:17,&quot;nano&quot;:672785600}},&quot;historyId&quot;:&quot;010ff855-9655-4b1c-a319-a9900bb2d0bd&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:40,&quot;second&quot;:17,&quot;nano&quot;:207581800}},&quot;historyId&quot;:&quot;2cb5bc7a-4e73-4f07-af9e-801267a9c190&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:40,&quot;second&quot;:16,&quot;nano&quot;:619551300}},&quot;historyId&quot;:&quot;2f78a266-21d6-448c-9673-74673d9906ca&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/validate&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.common.controller.AuthController&quot;,&quot;methodName&quot;:&quot;validate&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;cecf0620fef479e9d667b2ace0a7dee9&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/auth/validate&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;Authorization&quot;,&quot;value&quot;:&quot;Bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MjYxMTkzMjgsImV4cCI6MTcyNjEyMjkyOCwic3ViIjoiNDJjNmY5MzMtNmQwYi00M2FkLTk1NzktZTcxYTdhNjc0ODFmIiwicm9sZSI6IlVTRVIifQ.ZsRr5Iu2Qrp_kSg5dXijp1B0P6BeN4RRCcObS5KTtWY&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:40,&quot;second&quot;:6,&quot;nano&quot;:848992700}},&quot;historyId&quot;:&quot;d5efb41f-a2a6-4aab-8fd5-d478ee501b64&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:35,&quot;second&quot;:27,&quot;nano&quot;:912146900}},&quot;historyId&quot;:&quot;0117fb67-141d-4301-afcd-0e94ff541e5b&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;backend&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/auth/PLogin&quot;,&quot;simpleClassName&quot;:&quot;org.example.backend.user.controller.UserAuthController&quot;,&quot;methodName&quot;:&quot;PLogin&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;description&quot;:&quot;使用 账号密码 的 登录&quot;,&quot;methodName&quot;:&quot;PLogin&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;75af872f257ac23482d4e0e7306b4a4b&quot;,&quot;available&quot;:true},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/auth/PLogin&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;username\&quot;: \&quot;holic_\&quot;,\n  \&quot;password\&quot;: \&quot;m13245jia\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:9,&quot;day&quot;:12},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:34,&quot;second&quot;:11,&quot;nano&quot;:481597300}},&quot;historyId&quot;:&quot;60fc29a7-0d01-439d-8481-bc4e53e6eeb0&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false}]" />
  </component>
</project>